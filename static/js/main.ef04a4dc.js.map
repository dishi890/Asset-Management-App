{"version":3,"file":"static/js/main.ef04a4dc.js","mappings":"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","sources":["src/state/reducers/qrcodeReducer.js","src/state/reducers/loginStateReducer.js","src/state/reducers/userNameReducer.js","src/state/reducers/assetFormReducer.js","src/state/reducers/index.js","src/state/store.js","src/screens/AllocationModal.js","src/screens/RevokeAssetScreen.js","src/screens/InStockScreen.js","src/screens/Home.js","src/screens/AssetSearch.js","src/state/action-creators/index.js","src/screens/AddAssetScreen1.js","src/screens/AddAssetScreen2.js","src/screens/AddAssetScreen3.js","src/components/CameraModal.js","src/screens/AddAssetScreen4.js","src/screens/AddAsset.js","src/screens/Assethistory.js","src/screens/ContentTabs.js","src/components/ContentLanding.js","src/components/Landing.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["const reducer = (state=0,action)=>{\n    if(action.type==='fetch'){\n        return action.payload\n    }\n    else if(action.type==='clear'){\n        return action.payload\n    }\n    else{\n        return state\n    }\n}\nexport default reducer","const reducer = (state=false,action)=>{\n    if(action.type==='loggedin'){\n        return action.payload\n    }\n    else if(action.type==='loggedout'){\n        return action.payload\n    }\n    else{\n        return state\n    }\n}\nexport default reducer","const reducer = (state='',action)=>{\n    if(action.type==='loginUser'){\n        return action.payload\n    }\n    else if(action.type==='logoutUser'){\n        return action.payload\n    }\n    else{\n        return state\n    }\n}\nexport default reducer","// Initial state for the asset form\nconst initialState = {\n    \"AssetID\":-1,\n    \"AssetName\":\"\",\n    \"AssetCode\":\"\",\n    \"AssetType\":\"Individual\",\n    \"TangibleIntangible\":\"Tangible\",\n    \"CategoryID\":0,\n    \"SubcategoryID\":0,\n    \"ManufacturerID\":0,\n    \"BrandID\":0,\n    \"Description\":\"\",\n    \"Quantity\":0,\n    \"ModelNo\":\"\",\n    \"SerialNo\":\"\",\n    \"Condition\":\"New\",\n    \"Image_URL\":\"\",\n    \"PurchaseDate\":\"\",\n    \"WarrantyDate\":\"\",\n    \"ExpiryDate\":null,\n    \"CurrentLocation\":\"\",\n    \"Status\":\"\",\n    \"assetFinance\":{\n        \"VendorID\":-1,\n        \"AccountCode\":0,\n        \"PONumber\":0,\n        \"RecoveryPeriod\":0,\n        \"PurchasePrice\":0,\n        \"MarketValue\":0,\n        \"ScrapValue\":0,\n        \"DepreciationMethod\":\"StraightLine\",\n        \"ReceivedDate\":\"\",\n        \"InServiceDate\":\"\",\n        \"TaxPercentage\":0,\n        \"NetValue\":0\n    },\n    \"assetallocation\":{\n        \"Outlet_ID\":-1,\n        \"Person_In_Charge\":\"\"\n    },\n    \"expense\":{\n        \"AdditionalCharges\":0,\n        \"AmcCharges\":0,\n        \"InstallationCharges\":0,\n        \"AdditionalChargesRemarks\":\"\"\n    }\n};\n\nconst assetFormReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'addAssetForm':\n            // Merge partial data into the existing state\n            return { ...state, ...action.payload };\n        case 'deleteForm':\n            // Reset the asset form to initial state\n            return initialState;\n        default:\n            return state;\n    }\n}\n\nexport default assetFormReducer;\n","import {combineReducers} from \"redux\";\nimport qrcodeReducer from \"./qrcodeReducer\";\nimport loginStateReducer from \"./loginStateReducer\";\nimport userNameReducer from \"./userNameReducer\";\nimport assetFormReducer from \"./assetFormReducer\";\n\nconst reducers = combineReducers({\n    qrcode:qrcodeReducer,\n    loginState:loginStateReducer,\n    userName:userNameReducer,\n    assetForm:assetFormReducer\n})\nexport default reducers ","import reducers from \"./reducers\";\nimport {thunk} from \"redux-thunk\"\nimport {applyMiddleware, legacy_createStore} from \"redux\"\n\nexport const store = legacy_createStore(reducers,{},applyMiddleware(thunk))\n","// ✅ Final AllocationModal.js - Direct Allocation + UI Refresh (No JSON file writes)\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  View, Text, TextInput, StyleSheet, TouchableOpacity,\r\n  Modal, ScrollView, KeyboardAvoidingView, Platform, Alert, Animated\r\n} from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport assetList from '../assets/data/assetList_cleaned.json';\r\n\r\nconst departments = [\r\n  'Sales', 'B to B', 'B to C', 'Leverage Partners', 'Fly Homes', 'Fly loans',\r\n  'International office', 'Uniops', 'HR', 'Accounts', 'Admin', 'IT'\r\n];\r\n\r\nconst AllocationModal = ({ visible, onClose, onOpenRevoke, onAllocated }) => {\r\n  const [form, setForm] = useState({\r\n    name: '', onboardingDate: ''\r\n  });\r\n  const [selectedEmpCode, setSelectedEmpCode] = useState('');\r\n  const [selectedDepartment, setSelectedDepartment] = useState('');\r\n  const [uniqueId, setUniqueId] = useState('');\r\n  const [assetType, setAssetType] = useState('');\r\n  const [confirmationAnim] = useState(new Animated.Value(0));\r\n  const [confirmationText, setConfirmationText] = useState('');\r\n  const [empCodes, setEmpCodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const codes = [...new Set(assetList.map(item => item['Employee Code']).filter(Boolean))];\r\n    setEmpCodes(codes);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!selectedEmpCode) return;\r\n\r\n    const match = assetList.find(item => item['Employee Code'] === selectedEmpCode);\r\n\r\n    if (match) {\r\n      const today = new Date();\r\n      const formatted = `${today.getDate().toString().padStart(2, '0')}-${(today.getMonth() + 1).toString().padStart(2, '0')}-${today.getFullYear()}`;\r\n\r\n      setForm({\r\n        name: match['Name'] || '',\r\n        onboardingDate: formatted\r\n      });\r\n\r\n      setSelectedDepartment(match['Department'] || '');\r\n      setAssetType(match['Asset Type'] || '');\r\n    }\r\n  }, [selectedEmpCode]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!form.name || !selectedEmpCode || !selectedDepartment || !uniqueId || !assetType || !form.onboardingDate) {\r\n      Alert.alert('Error', 'Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      name: form.name,\r\n      empCode: selectedEmpCode,\r\n      department: selectedDepartment,\r\n      onboardingDate: form.onboardingDate,\r\n      uniqueId,\r\n      assetType,\r\n      'Asset Id': uniqueId\r\n    };\r\n\r\n    try {\r\n      setConfirmationText('✅ Asset allocated successfully');\r\n      onAllocated && onAllocated(payload); // pass the payload to parent\r\n\r\n      confirmationAnim.setValue(0);\r\n      Animated.timing(confirmationAnim, {\r\n        toValue: 1,\r\n        duration: 1000,\r\n        useNativeDriver: false\r\n      }).start();\r\n\r\n      // Reset form\r\n      setForm({ name: '', onboardingDate: '' });\r\n      setSelectedEmpCode('');\r\n      setSelectedDepartment('');\r\n      setUniqueId('');\r\n      setAssetType('');\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Something went wrong');\r\n    }\r\n  };\r\n\r\n  const handleRevokeRedirect = () => {\r\n    onClose();\r\n    setTimeout(() => onOpenRevoke && onOpenRevoke(), 300);\r\n  };\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <Modal visible={visible} animationType=\"slide\">\r\n      <KeyboardAvoidingView behavior={Platform.OS === 'ios' ? 'padding' : undefined} style={styles.container}>\r\n        <ScrollView contentContainerStyle={styles.content}>\r\n          <Text style={styles.title}>📝 Asset Allocation Form</Text>\r\n\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Name\"\r\n            value={form.name}\r\n            onChangeText={(text) => setForm({ ...form, name: text })}\r\n          />\r\n\r\n          <View style={styles.dropdownContainer}>\r\n            <Picker\r\n              selectedValue={selectedDepartment}\r\n              onValueChange={(value) => setSelectedDepartment(value)}>\r\n              <Picker.Item label=\"Select Department\" value=\"\" />\r\n              {departments.map((dept, i) => (\r\n                <Picker.Item key={i} label={dept} value={dept} />\r\n              ))}\r\n            </Picker>\r\n          </View>\r\n\r\n          <View style={styles.dropdownContainer}>\r\n            <Picker\r\n              selectedValue={selectedEmpCode}\r\n              onValueChange={(value) => setSelectedEmpCode(value)}>\r\n              <Picker.Item label=\"Select Employee Code\" value=\"\" />\r\n              {empCodes.map((code, i) => (\r\n                <Picker.Item key={i} label={code} value={code} />\r\n              ))}\r\n            </Picker>\r\n          </View>\r\n\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Unique Laptop ID\"\r\n            value={uniqueId}\r\n            onChangeText={setUniqueId}\r\n          />\r\n\r\n          <View style={styles.dropdownContainer}>\r\n            <Picker\r\n              selectedValue={assetType}\r\n              onValueChange={setAssetType}>\r\n              <Picker.Item label=\"Select Asset Type\" value=\"\" />\r\n              <Picker.Item label=\"Fixed\" value=\"Fixed\" />\r\n              <Picker.Item label=\"Rental\" value=\"Rental\" />\r\n            </Picker>\r\n          </View>\r\n\r\n          <TextInput\r\n            style={[styles.input, { backgroundColor: '#f0f0f0' }]}\r\n            placeholder=\"Onboarding Date\"\r\n            value={form.onboardingDate}\r\n            editable={false}\r\n          />\r\n\r\n          <TouchableOpacity style={styles.submitBtn} onPress={handleSubmit}>\r\n            <Text style={styles.submitText}>Submit</Text>\r\n          </TouchableOpacity>\r\n\r\n          {confirmationText && (\r\n            <Animated.Text style={[styles.confirmation, { opacity: confirmationAnim }]}>\r\n              {confirmationText}\r\n            </Animated.Text>\r\n          )}\r\n\r\n          <TouchableOpacity style={styles.revokeLink} onPress={handleRevokeRedirect}>\r\n            <Text style={styles.revokeText}>🔁 Revoke Asset</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity style={styles.closeBtn} onPress={onClose}>\r\n            <Text style={styles.closeText}>Close</Text>\r\n          </TouchableOpacity>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#fff' },\r\n  content: { padding: 20 },\r\n  title: { fontSize: 22, fontWeight: 'bold', marginBottom: 20 },\r\n  input: {\r\n    borderWidth: 1, borderColor: '#ccc', borderRadius: 8,\r\n    padding: 10, marginBottom: 10\r\n  },\r\n  dropdownContainer: {\r\n    borderWidth: 1, borderColor: '#ccc', borderRadius: 8, marginBottom: 10\r\n  },\r\n  submitBtn: {\r\n    backgroundColor: '#009933', padding: 12, borderRadius: 8,\r\n    alignItems: 'center', marginTop: 10\r\n  },\r\n  submitText: { color: '#fff', fontWeight: 'bold' },\r\n  confirmation: { fontSize: 16, marginTop: 15, color: '#4CAF50' },\r\n  revokeLink: { marginTop: 25, alignSelf: 'center' },\r\n  revokeText: { color: '#007bff', fontWeight: 'bold' },\r\n  closeBtn: { marginTop: 20, alignItems: 'center' },\r\n  closeText: { color: 'red' }\r\n});\r\n\r\nexport default AllocationModal;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Modal,\r\n  FlatList,\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView,\r\n  Alert\r\n} from 'react-native';\r\nimport assetData from '../assets/data/assetList_cleaned.json';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst RevokeAssetScreen = ({ visible, onClose }) => {\r\n  const [empCode, setEmpCode] = useState('');\r\n  const [matchedAssets, setMatchedAssets] = useState([]);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleSearch = () => {\r\n    const results = assetData.filter(\r\n      (item) => item['Employee Code']?.toLowerCase() === empCode.toLowerCase()\r\n    );\r\n    setMatchedAssets(results);\r\n    setSuccessMessage('');\r\n  };\r\n\r\n  const handleInStock = (assetId) => {\r\n    const updatedAssets = matchedAssets.map(item => {\r\n      if (item['Asset ID'] === assetId) {\r\n        return {\r\n          ...item,\r\n          'Deboarding Date': new Date().toLocaleDateString()\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    const newMatched = updatedAssets.filter(item => item['Asset ID'] !== assetId);\r\n    setMatchedAssets(newMatched);\r\n    setSuccessMessage(`✅ Asset ${assetId} successfully marked in stock.`);\r\n  };\r\n\r\n  return (\r\n    <Modal visible={visible} animationType=\"slide\">\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\r\n        style={styles.container}>\r\n        <ScrollView contentContainerStyle={styles.content}>\r\n          <TouchableOpacity style={styles.closeBtn} onPress={onClose}>\r\n            <Ionicons name=\"close-circle\" size={28} color=\"red\" />\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.heading}>🔁 Revoke Asset</Text>\r\n\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter Employee Code\"\r\n            value={empCode}\r\n            onChangeText={setEmpCode}\r\n            onSubmitEditing={handleSearch}\r\n          />\r\n\r\n          <TouchableOpacity style={styles.searchBtn} onPress={handleSearch}>\r\n            <Text style={styles.searchText}>Search</Text>\r\n          </TouchableOpacity>\r\n\r\n          {successMessage !== '' && <Text style={styles.successMessage}>{successMessage}</Text>}\r\n\r\n          {matchedAssets.length > 0 ? (\r\n            <FlatList\r\n              data={matchedAssets}\r\n              keyExtractor={(item) => item['Asset ID']}\r\n              renderItem={({ item }) => (\r\n                <View style={styles.card}>\r\n                  <Text style={styles.label}>Name: <Text style={styles.value}>{item['Name']}</Text></Text>\r\n                  <Text style={styles.label}>Asset ID: <Text style={styles.value}>{item['Asset ID']}</Text></Text>\r\n                  <Text style={styles.label}>Vendor: <Text style={styles.value}>{item['Vendor']}</Text></Text>\r\n                  <Text style={styles.label}>Allocated Date: <Text style={styles.value}>{item['Onboarding Date']}</Text></Text>\r\n                  <Text style={styles.label}>Deboarding Date: <Text style={styles.value}>{item['Deboarding Date'] || '-'}</Text></Text>\r\n                  <TouchableOpacity\r\n                    style={styles.inStockBtn}\r\n                    onPress={() => handleInStock(item['Asset ID'])}>\r\n                    <Text style={styles.inStockText}>Mark as In-Stock</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            />\r\n          ) : (\r\n            empCode !== '' && <Text style={styles.noResult}>No allocated assets found.</Text>\r\n          )}\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff'\r\n  },\r\n  content: {\r\n    padding: 20\r\n  },\r\n  closeBtn: {\r\n    alignSelf: 'flex-end',\r\n    marginBottom: 10\r\n  },\r\n  heading: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  },\r\n  searchBtn: {\r\n    backgroundColor: '#007bff',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginBottom: 20\r\n  },\r\n  searchText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  card: {\r\n    backgroundColor: '#f9f9f9',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 15,\r\n    elevation: 2\r\n  },\r\n  label: {\r\n    fontWeight: 'bold'\r\n  },\r\n  value: {\r\n    fontWeight: 'normal'\r\n  },\r\n  inStockBtn: {\r\n    marginTop: 10,\r\n    backgroundColor: '#28a745',\r\n    padding: 8,\r\n    borderRadius: 6,\r\n    alignItems: 'center'\r\n  },\r\n  inStockText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  noResult: {\r\n    textAlign: 'center',\r\n    marginTop: 30,\r\n    fontSize: 16,\r\n    color: 'gray'\r\n  },\r\n  successMessage: {\r\n    backgroundColor: '#d4edda',\r\n    color: '#155724',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginBottom: 10,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nexport default RevokeAssetScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View, Text, TextInput, FlatList, TouchableOpacity,\r\n  StyleSheet, Modal, Alert, Dimensions, ScrollView, Animated\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as Sharing from 'expo-sharing';\r\nimport * as XLSX from 'xlsx';\r\nimport { BarChart } from 'react-native-chart-kit';\r\nimport assetData from '../assets/data/assetList_cleaned.json';\r\nimport vendorData from '../assets/data/vendorList.json';\r\nimport fixedAssets from '../assets/data/fixedAssets.json';\r\nimport rentalAssets from '../assets/data/rentalAssets.json';\r\n\r\nconst InStockScreen = ({ visible, onClose, allocatedData = [] }) => {\r\n  const [tab, setTab] = useState('inStock');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [animatedValue] = useState(new Animated.Value(0));\r\n\r\n  useEffect(() => {\r\n    Animated.timing(animatedValue, {\r\n      toValue: 1,\r\n      duration: 1500,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  }, []);\r\n\r\n  const inStockAssets = assetData.filter(\r\n    item => !allocatedData.some(alloc => alloc.uniqueId === item['Asset Id'])\r\n  );\r\n\r\n  const getGroupedAssets = () => {\r\n    const list = tab === 'inStock' ? inStockAssets : allocatedData;\r\n\r\n    const filtered = list.filter(item =>\r\n      (item['Asset Id'] || item.uniqueId || '')\r\n        .toLowerCase()\r\n        .includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    const fixed = filtered\r\n      .filter(item => (item.assetType || item['Asset Type'] || '').toLowerCase() === 'fixed')\r\n      .sort((a, b) =>\r\n        (a['Asset Id'] || a.uniqueId || '').localeCompare(b['Asset Id'] || b.uniqueId || '')\r\n      );\r\n\r\n    const rental = filtered\r\n      .filter(item => (item.assetType || item['Asset Type'] || '').toLowerCase() === 'rental')\r\n      .sort((a, b) =>\r\n        (a['Asset Id'] || a.uniqueId || '').localeCompare(b['Asset Id'] || b.uniqueId || '')\r\n      );\r\n\r\n    const fixedWithHeader = fixed.length\r\n      ? [{ type: 'header', label: '🛠️ FIXED ASSETS' }, ...fixed]\r\n      : [];\r\n    const rentalWithHeader = rental.length\r\n      ? [{ type: 'header', label: '🔁 RENTAL ASSETS' }, ...rental]\r\n      : [];\r\n\r\n    return [...fixedWithHeader, ...rentalWithHeader];\r\n  };\r\n\r\n  const getFilteredVendors = () => {\r\n    return vendorData.filter(v =>\r\n      typeof v['As on '] === 'string' &&\r\n      v['As on '] !== 'Vendor name' &&\r\n      v['As on '].toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const exportAssetsByTypeToExcel = async (type) => {\r\n    try {\r\n      const source = type === 'fixed' ? fixedAssets : rentalAssets;\r\n      const cleaned = source.map(item => ({\r\n        'Asset ID': item['Asset ID'],\r\n        'Asset Type': item['Asset Type'],\r\n        'Name': item['Name'],\r\n        'Emp Code': item['Emp Code']\r\n      }));\r\n\r\n      const worksheet = XLSX.utils.json_to_sheet(cleaned);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, `${type.charAt(0).toUpperCase() + type.slice(1)} Assets`);\r\n\r\n      const excelData = XLSX.write(workbook, { type: \"base64\", bookType: \"xlsx\" });\r\n      const uri = FileSystem.cacheDirectory + `${type}_Assets.xlsx`;\r\n\r\n      await FileSystem.writeAsStringAsync(uri, excelData, {\r\n        encoding: FileSystem.EncodingType.Base64,\r\n      });\r\n\r\n      await Sharing.shareAsync(uri);\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Failed to export assets: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const renderItem = ({ item, index }) => {\r\n    if (tab === 'vendorSummary') {\r\n      return (\r\n        <View style={styles.assetCard}>\r\n          <Text style={styles.assetText}>{index + 1}. {item['As on ']}</Text>\r\n          <Text style={styles.assetText}>Total Assets: {item['30-Apr']}</Text>\r\n          <Text style={styles.assetText}>Allocated: {item['Unnamed: 3']}</Text>\r\n          <Text style={styles.assetText}>Need to Find: {item['Unnamed: 4']}</Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    if (item.type === 'header') {\r\n      return <Text style={styles.sectionHeader}>{item.label}</Text>;\r\n    }\r\n\r\n    const assetId = item['Asset Id'] || item.uniqueId;\r\n    const vendor = item['Vendor Name'] || '—';\r\n    const type = item.assetType || item['Asset Type'] || '';\r\n    const isFixed = type.toLowerCase() === 'fixed';\r\n    const isRental = type.toLowerCase() === 'rental';\r\n\r\n    return (\r\n      <TouchableOpacity onPress={() => exportAssetsByTypeToExcel(type.toLowerCase())}>\r\n        <View style={styles.assetCard}>\r\n          <Text style={styles.assetText}>{index + 1}. Asset ID: {assetId}</Text>\r\n          <Text style={styles.assetText}>Vendor: {vendor}</Text>\r\n          {tab === 'allocated' && (\r\n            <>\r\n              <Text style={styles.assetText}>Name: {item.name}</Text>\r\n              <Text style={styles.assetText}>Department: {item.department}</Text>\r\n              <Text style={[styles.assetText, isFixed && { color: 'lime' }, isRental && { color: 'deepskyblue' }]}\r\n              >\r\n                {isFixed && '🛠️ '}\r\n                {isRental && '🔁 '}\r\n                Type: {type}\r\n              </Text>\r\n              <Text style={styles.assetText}>Onboarding: {item.onboardingDate}</Text>\r\n            </>\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (!visible) return null;\r\n\r\n  const dataToRender = tab === 'vendorSummary' ? getFilteredVendors() : getGroupedAssets();\r\n  const fixedCount = fixedAssets.length;\r\n  const rentalCount = rentalAssets.length;\r\n\r\n  return (\r\n    <Modal visible={visible} animationType=\"slide\">\r\n      <ScrollView style={[styles.container, { backgroundColor: '#f3f9ff' }]}>\r\n        <TouchableOpacity style={styles.closeButton} onPress={onClose}>\r\n          <Ionicons name=\"close-circle\" size={30} color=\"#ff3366\" />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={[styles.header, { color: '#1a1aff' }]}>Asset Management</Text>\r\n\r\n        <View style={styles.tabRow}>\r\n          <TouchableOpacity onPress={() => setTab('inStock')} style={tab === 'inStock' ? styles.activeTab : styles.tab}>\r\n            <Text style={{ color: '#1a1aff' }}>📦 In Stock</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setTab('allocated')} style={tab === 'allocated' ? styles.activeTab : styles.tab}>\r\n            <Text style={{ color: '#1a1aff' }}>🔄 Allocated</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setTab('vendorSummary')} style={tab === 'vendorSummary' ? styles.activeTab : styles.tab}>\r\n            <Text style={{ color: '#1a1aff' }}>📊 Vendor Summary</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <TextInput\r\n          placeholder={tab === 'vendorSummary' ? \"Search by Vendor Name\" : \"Search by Asset ID\"}\r\n          placeholderTextColor=\"#888\"\r\n          value={searchQuery}\r\n          onChangeText={setSearchQuery}\r\n          style={[styles.searchInput, { color: '#000' }]}\r\n        />\r\n\r\n        {tab === 'inStock' && (\r\n          <Animated.View style={{ opacity: animatedValue, transform: [{ scale: animatedValue }] }}>\r\n            <BarChart\r\n              data={{\r\n                labels: ['Fixed', 'Rental'],\r\n                datasets: [{\r\n                  data: [fixedCount, rentalCount],\r\n                  colors: [\r\n                    () => '#00e5ff',\r\n                    () => '#ff4081'\r\n                  ]\r\n                }]\r\n              }}\r\n              width={Dimensions.get('window').width - 30}\r\n              height={260}\r\n              fromZero\r\n              showValuesOnTopOfBars\r\n              chartConfig={{\r\n                backgroundGradientFrom: '#d9a7c7',\r\n                backgroundGradientTo: '#fffcdc',\r\n                decimalPlaces: 0,\r\n                color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                labelColor: () => '#333',\r\n                barPercentage: 0.65,\r\n                propsForBackgroundLines: {\r\n                  stroke: '#bbb'\r\n                },\r\n                propsForLabels: {\r\n                  fontSize: 12\r\n                }\r\n              }}\r\n              verticalLabelRotation={0}\r\n              style={{ marginBottom: 30, borderRadius: 20 }}\r\n              onDataPointClick={({ index }) => {\r\n                const type = index === 0 ? 'fixed' : 'rental';\r\n                exportAssetsByTypeToExcel(type);\r\n              }}\r\n            />\r\n          </Animated.View>\r\n        )}\r\n\r\n        <FlatList\r\n          data={dataToRender}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          renderItem={renderItem}\r\n          ListEmptyComponent={<Text style={styles.noData}>No data found.</Text>}\r\n        />\r\n      </ScrollView>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 15 },\r\n  closeButton: { alignSelf: 'flex-end', marginBottom: 10 },\r\n  header: { fontSize: 24, fontWeight: 'bold', marginBottom: 10 },\r\n  tabRow: { flexDirection: 'row', justifyContent: 'space-around', marginBottom: 15 },\r\n  tab: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: '#e6e6fa',\r\n    borderRadius: 20,\r\n  },\r\n  activeTab: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: '#ff99cc',\r\n    borderRadius: 20,\r\n  },\r\n  searchInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  assetCard: {\r\n    backgroundColor: '#fff0f5',\r\n    padding: 15,\r\n    borderRadius: 8,\r\n    marginBottom: 10,\r\n    elevation: 3,\r\n  },\r\n  assetText: { fontSize: 15, marginBottom: 5, color: '#333' },\r\n  noData: { textAlign: 'center', marginTop: 20, color: '#888' },\r\n  sectionHeader: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#ffe4e1',\r\n    color: '#000',\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 10,\r\n    marginTop: 10,\r\n    marginBottom: 5,\r\n    borderRadius: 6,\r\n  },\r\n});\r\n\r\nexport default InStockScreen;\r\n","// ✅ Final Home.js with refreshKey integration and correct allocatedData reload\nimport React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  StyleSheet,\n  Modal,\n  Dimensions,\n  ScrollView,\n  Animated\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { PieChart } from 'react-native-chart-kit';\nimport fixedAssets from '../assets/data/fixedAssets.json';\nimport rentalAssets from '../assets/data/rentalAssets.json';\nimport AllocationModal from './AllocationModal';\nimport RevokeAssetScreen from './RevokeAssetScreen';\nimport InStockScreen from './InStockScreen';\n\nconst screenWidth = Dimensions.get('window').width;\n\nconst Home = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [viewType, setViewType] = useState('');\n  const [allocationVisible, setAllocationVisible] = useState(false);\n  const [revokeVisible, setRevokeVisible] = useState(false);\n  const [inStockVisible, setInStockVisible] = useState(false);\n  const [allocatedData, setAllocatedData] = useState([]);\n\n  const reloadAllocatedAssets = (newAsset) => {\n    if (newAsset) setAllocatedData(prev => [...prev, newAsset]);\n  };\n\n  const totalLaptops = fixedAssets.length + rentalAssets.length;\n\n  const showAssets = (type) => {\n    setViewType(type);\n    setModalVisible(true);\n  };\n\n  const renderItem = ({ item }) => (\n    <View style={styles.assetCard}>\n      <Text style={styles.assetText}>Name: {item.Name}</Text>\n      <Text style={styles.assetText}>Vendor: {item[\"Vendor Name\"]}</Text>\n      <Text style={styles.assetText}>Warranty: {item.Warranty || 'N/A'}</Text>\n    </View>\n  );\n\n  return (\n    <View style={{ flex: 1 }}>\n      <ScrollView contentContainerStyle={styles.container}>\n        <Text style={styles.heading}>Total Laptops</Text>\n        <View style={styles.iconContainer}>\n          <Ionicons name=\"laptop-outline\" size={40} color=\"#009933\" />\n          <Text style={styles.totalCount}>{totalLaptops}</Text>\n        </View>\n\n        <PieChart\n          data={[\n            {\n              name: 'Fixed',\n              population: fixedAssets.length,\n              color: '#4CAF50',\n              legendFontColor: '#333',\n              legendFontSize: 14\n            },\n            {\n              name: 'Rental',\n              population: rentalAssets.length,\n              color: '#FFC107',\n              legendFontColor: '#333',\n              legendFontSize: 14\n            }\n          ]}\n          width={screenWidth - 20}\n          height={180}\n          chartConfig={{\n            backgroundGradientFrom: '#fff',\n            backgroundGradientTo: '#fff',\n            color: () => `#000`\n          }}\n          accessor=\"population\"\n          backgroundColor=\"transparent\"\n          paddingLeft=\"15\"\n          absolute\n          style={styles.chartStyle}\n        />\n\n        <TouchableOpacity style={styles.button} onPress={() => showAssets('fixed')}>\n          <Text style={styles.buttonText}>View Fixed Assets</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.button} onPress={() => showAssets('rental')}>\n          <Text style={styles.buttonText}>View Rental Assets</Text>\n        </TouchableOpacity>\n      </ScrollView>\n\n      <Animated.View style={[styles.floatingButton, { bottom: 25, right: 25 }]}> \n        <TouchableOpacity onPress={() => setAllocationVisible(true)}>\n          <Ionicons name=\"add-circle\" size={60} color=\"#009933\" />\n        </TouchableOpacity>\n      </Animated.View>\n\n      <Animated.View style={[styles.floatingButton, { bottom: 100, right: 25 }]}> \n        <TouchableOpacity onPress={() => setRevokeVisible(true)}>\n          <Ionicons name=\"sync\" size={40} color=\"#FF5722\" />\n        </TouchableOpacity>\n      </Animated.View>\n\n      <Animated.View style={[styles.floatingButton, { bottom: 175, right: 25 }]}> \n        <TouchableOpacity onPress={() => setInStockVisible(true)}>\n          <Ionicons name=\"cube-outline\" size={36} color=\"#4CAF50\" />\n        </TouchableOpacity>\n      </Animated.View>\n\n      <Modal visible={modalVisible} animationType=\"slide\">\n        <View style={styles.modalContainer}>\n          <TouchableOpacity\n            style={styles.closeButton}\n            onPress={() => setModalVisible(false)}>\n            <Ionicons name=\"close-circle\" size={30} color=\"red\" />\n          </TouchableOpacity>\n\n          <Text style={styles.modalHeading}>\n            {viewType === 'fixed' ? 'Fixed Asset List' : 'Rental Asset List'}\n          </Text>\n\n          <FlatList\n            data={viewType === 'fixed' ? fixedAssets : rentalAssets}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={renderItem}\n          />\n        </View>\n      </Modal>\n\n      <AllocationModal\n        visible={allocationVisible}\n        onClose={() => setAllocationVisible(false)}\n        onOpenRevoke={() => {\n          setAllocationVisible(false);\n          setTimeout(() => setRevokeVisible(true), 300);\n        }}\n        onAllocated={reloadAllocatedAssets}\n      />\n\n      <RevokeAssetScreen\n        visible={revokeVisible}\n        onClose={() => setRevokeVisible(false)}\n      />\n\n      <InStockScreen\n        visible={inStockVisible}\n        onClose={() => setInStockVisible(false)}\n        allocatedData={allocatedData}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 15,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  heading: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginVertical: 10\n  },\n  iconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  totalCount: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginLeft: 10,\n    color: '#009933'\n  },\n  chartStyle: {\n    marginVertical: 10\n  },\n  button: {\n    backgroundColor: '#009933',\n    paddingVertical: 12,\n    paddingHorizontal: 25,\n    borderRadius: 8,\n    marginVertical: 10\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16\n  },\n  modalContainer: {\n    flex: 1,\n    padding: 15,\n    paddingTop: 40,\n    backgroundColor: '#f2f2f2'\n  },\n  closeButton: {\n    alignSelf: 'flex-end',\n    marginBottom: 10\n  },\n  modalHeading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  assetCard: {\n    backgroundColor: '#fff',\n    padding: 15,\n    marginVertical: 8,\n    borderRadius: 8,\n    elevation: 2\n  },\n  assetText: {\n    fontSize: 16\n  },\n  floatingButton: {\n    position: 'absolute',\n    backgroundColor: '#fff',\n    borderRadius: 50,\n    elevation: 5,\n    zIndex: 10\n  }\n});\n\nexport default Home;\n","import React, { useState } from 'react'\r\nimport { View, Text, TextInput, FlatList, StyleSheet } from 'react-native'\r\nimport assetData from '../assets/data/assetList_cleaned.json' // <-- use the converted JSON from your Excel\r\n// (only where needed)\r\n\r\n\r\nconst AssetSearch = () => {\r\n  const [search, setSearch] = useState('')\r\n  \r\n  const filteredData = assetData.filter(item =>\r\n    item.Asset_ID.toLowerCase().includes(search.toLowerCase()) ||\r\n    item.Emp_Code.toLowerCase().includes(search.toLowerCase())\r\n  )\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View style={styles.card}>\r\n      <Text style={styles.title}>{item.Name}</Text>\r\n      <Text>Emp Code: {item.Emp_Code}</Text>\r\n      <Text>Asset ID: {item.Asset_ID}</Text>\r\n      <Text>Vendor: {item.Vendor_Name}</Text>\r\n    </View>\r\n  )\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.searchBar}\r\n        placeholder=\"Search by Asset ID or Emp Code\"\r\n        value={search}\r\n        onChangeText={setSearch}\r\n      />\r\n      <FlatList\r\n        data={filteredData}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={renderItem}\r\n        ListEmptyComponent={<Text style={styles.empty}>No matching records found</Text>}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#eef9f1',\r\n    padding: 10\r\n  },\r\n  searchBar: {\r\n    height: 50,\r\n    borderColor: '#009933',\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    backgroundColor: 'white'\r\n  },\r\n  card: {\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    marginVertical: 6,\r\n    borderRadius: 8,\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.1,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 4,\r\n    elevation: 3\r\n  },\r\n  title: {\r\n    fontSize: 17,\r\n    fontWeight: '600',\r\n    marginBottom: 4\r\n  },\r\n  empty: {\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n    color: 'gray'\r\n  }\r\n})\r\n\r\nexport default AssetSearch\r\n","export const qrcodeFetch=(assetqrcode)=>{\n    return(dispatch)=>{\n        dispatch({\n            type:'fetch',\n            payload:assetqrcode\n        })\n    }\n}\nexport const qrcodeClear=(assetqrcode)=>{\n    return(dispatch)=>{\n        dispatch({\n            type:'clear',\n            payload:''\n        })\n    }\n}\nexport const loggedin=()=>{\n    return(dispatch)=>{\n        dispatch({\n            type:'loggedin',\n            payload:true\n        })\n    }\n}\nexport const loggedout=()=>{\n    return(dispatch)=>{\n        dispatch({\n            type:'loggedout',\n            payload:false\n        })\n    }\n}\nexport const userNameAssign=(nameofuser)=>{\n    return(dispatch)=>{\n        dispatch({\n            type:'loginUser',\n            payload:nameofuser\n        })\n    }\n}\nexport const userNameRemoval=()=>{\n    return(dispatch)=>{\n        dispatch({\n            type:'logoutUser',\n            payload:''\n        })\n    }\n}\nexport const addAssetForm=(assetformobject)=>{\n    return(dispatch)=>{\n        dispatch({\n            type:'addAssetForm',\n            payload:assetformobject\n        })\n    }\n}\nexport const resetAssetForm=()=>{\n    return(dispatch)=>{\n        dispatch({\n            type:'deleteForm',\n            payload:null\n        })\n    }\n}","import 'react-native-gesture-handler'\nimport React, { useEffect, useState } from 'react'\nimport {\n  Text,\n  StyleSheet,\n  View,\n  Image,\n  TextInput,\n  Pressable,\n  ScrollView,\n  ActivityIndicator,\n  Keyboard\n} from 'react-native'\nimport { Picker } from '@react-native-picker/picker'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { FontAwesome } from '@expo/vector-icons'\nimport { Ionicons } from '@expo/vector-icons'\nimport { Entypo } from '@expo/vector-icons'\nimport { Feather } from '@expo/vector-icons'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../state/index'\nimport { useSelector } from 'react-redux'\n\nconst AddAssetScreen1 = ({ navigation }) => {\n  const dispatch = useDispatch()\n  const actions = bindActionCreators(actionCreators, dispatch)\n  const assetForm = useSelector((state) => state.assetForm)\n\n  const [assetname, setAssetname] = useState(null)\n  const [assetdesc, setAssetdesc] = useState(null)\n  const [assetmodelno, setAssetmodelno] = useState(null)\n  const [assetserial, setAssetserial] = useState(null)\n  const [assetqty, setAssetqty] = useState(null)\n  // state variables for categories\n  const [openCategory, setOpenCategory] = useState(false)\n  const [categoryValue, setCategoryValue] = useState(null)\n  const [category, setCategory] = useState([\n    { Category_Name: 'All', Category_ID: -1 }\n  ])\n  const [filteredcategoryvalue, setFilteredcategoryvalue] = useState(-1)\n  // state variables for sub categories\n  const [opensubCategory, setOpensubCategory] = useState(false)\n  const [subcategoryValue, setsubCategoryValue] = useState(null)\n  const [subcategory, setsubCategory] = useState([\n    { Subcategory_Name: 'Choose Category first', Subcategory_ID: -1 }\n  ])\n  const [filteredsubcategoryvalue, setFilteredsubcategoryvalue] = useState(-1)\n  // state variables for manufacturers\n  const [openmanufacturer, setOpenmanufacturer] = useState(false)\n  const [manufacturerValue, setmanufacturerValue] = useState(null)\n  const [manufacturer, setmanufacturer] = useState([\n    { Manufacturer_Name: 'Choose Category first', Manufacturer_ID: -1 }\n  ])\n  const [filteredmanufacturervalue, setFilteredmanufacturervalue] = useState(-1)\n  // state variables for brands\n  const [openbrand, setOpenbrand] = useState(false)\n  const [brandValue, setbrandValue] = useState(null)\n  const [brand, setbrand] = useState([\n    { Brand_Name: 'Choose Mf first', Brand_ID: -1 }\n  ])\n  const [filteredbrandvalue, setFilteredbrandvalue] = useState(-1)\n  // state variables for tangible/intangible\n  const [opentangible, setOpentangible] = useState(false)\n  const [tangibleValue, settangibleValue] = useState(null)\n  const [filteredtangiblevalue, setFilteredtangiblevalue] = useState(-1)\n  // state variables for assettype\n  const [openassettype, setOpenassettype] = useState(false)\n  const [assettypeValue, setassettypeValue] = useState(null)\n  const [filteredassettypevalue, setFilteredassettypevalue] = useState(-1)\n  // Form details part 1\n  const assetForm1={\n    \"AssetID\":-1,\n    \"AssetName\":assetname,\n    \"AssetCode\":\"\",\n    \"AssetType\":filteredassettypevalue,\n    \"TangibleIntangible\":filteredtangiblevalue,\n    \"CategoryID\":filteredcategoryvalue,\n    \"SubcategoryID\":filteredsubcategoryvalue,\n    \"ManufacturerID\":filteredmanufacturervalue,\n    \"BrandID\":filteredbrandvalue,\n    \"Description\":assetdesc,\n    \"Quantity\":assetqty,\n    \"ModelNo\":assetmodelno,\n    \"SerialNo\":assetserial,       \n  }\n  // method to fetch categories\n  const fetchCategories = async () => {\n    try {\n      const res = await fetch(\n        `http://192.168.1.7:1443/api/AssetCategory/GetAllCategories`\n      )\n      if (!res.ok) {\n        setCategory({ Category_Name: 'Oops! Empty', Category_ID: -1 })\n        throw new Error('Could not fetch Categories')\n      }\n      const data = await res.json()\n      setCategory(data)\n    } catch (e) {\n      // setCategory(null)\n      // setError('Could not fetch Categories')\n    }\n  }\n  // method to fetch sub-categories\n  const fetchSubCategories = async () => {\n    try {\n      const res = await fetch(\n        `http://192.168.1.7:1443/api/AssetSubcategory/GetSubcategoriesByCategory?categoryID=` +\n          filteredcategoryvalue\n      )\n      if (!res.ok) {\n        setsubCategory({ Subcategory_Name: 'Oops! empty', Subcategory_ID: -1 })\n        throw new Error('Could not fetch Categories')\n      }\n      const data = await res.json()\n      setsubCategory(data)\n    } catch (e) {\n      // setCategory(null)\n      // setError('Could not fetch Categories')\n    }\n  }\n  // method to fetch manufacturers\n  const fetchmanufacturers = async () => {\n    try {\n      const res = await fetch(\n        `http://192.168.1.7:1443/api/AssetManufacturer/GetManufacturersBycategory?categoryID=` +\n          filteredcategoryvalue\n      )\n      if (!res.ok) {\n        setmanufacturer({\n          Manufacturer_Name: 'Oops! empty',\n          Manufacturer_ID: -1\n        })\n        throw new Error('Could not fetch Categories')\n      }\n      const data = await res.json()\n      setmanufacturer(data)\n    } catch (e) {\n      // setCategory(null)\n      // setError('Could not fetch Categories')\n    }\n  }\n  // method to fetch sub-categories\n  const fetchbrands = async () => {\n    try {\n      const res = await fetch(\n        `http://192.168.1.7:1443/api/AssetBrand/GetBrandsByManufacturers?manufacturerID=` +\n          filteredmanufacturervalue\n      )\n      if (!res.ok) {\n        setbrand({ Brand_Name: 'Oops! empty', Brand_ID: -1 })\n        throw new Error('Could not fetch Categories')\n      }\n      const data = await res.json()\n      setbrand(data)\n    } catch (e) {\n      // setCategory(null)\n      // setError('Could not fetch Categories')\n    }\n  }\n  useEffect(() => {\n    ;(async () => {\n      // await fetchOutlets()\n      await fetchCategories()\n    })()\n  }, [])\n  // sub categories and manufacturers fetch after category is chosen\n  useEffect(() => {\n    ;(async () => {\n      await fetchSubCategories()\n      await fetchmanufacturers()\n    })()\n  }, [filteredcategoryvalue])\n  // brands fetch after manufacturer is chosen\n  useEffect(() => {\n    ;(async () => {\n      await fetchbrands()\n    })()\n  }, [filteredmanufacturervalue])\n  useEffect(() => {\n    if (assettypeValue == 'Individual') {\n      setAssetqty(1)\n    } else {\n      setAssetqty(null)\n    }\n  }, [filteredassettypevalue])\n  return (\n    <>\n      <View style={styles.mainContainer}>\n        <View>\n          <View style={styles.disclaimationBox}>\n            <Text style={styles.disclaimationText}>\n              Part 1 : Asset Information\n            </Text>\n          </View>\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Asset Name\"\n              keyboardType=\"default\"\n              onChangeText={(text) => setAssetname(text)}\n              value={assetname}\n            />\n          </View>\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Description\"\n              keyboardType=\"default\"\n              onChangeText={(text) => setAssetdesc(text)}\n              value={assetdesc}\n            />\n          </View>\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Model Number\"\n              keyboardType=\"default\"\n              onChangeText={(text) => setAssetmodelno(text)}\n              value={assetmodelno}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Serial No.\"\n              keyboardType=\"default\"\n              onChangeText={(text) => setAssetserial(text)}\n              value={assetserial}\n            />\n          </View>\n\n          <View style={styles.dropdownContainer}>\n            <View style={[styles.dropdown, { paddingRight: 5 }]}>\n              <DropDownPicker\n                key=\"categoryPicker\"\n                open={openCategory}\n                value={categoryValue}\n                items={category}\n                setOpen={(value) => {\n                  setOpenCategory(value)\n                  setOpenmanufacturer(false)\n                  setOpenbrand(false)\n                  setOpensubCategory(false)\n                  setOpentangible(false)\n                  setOpenassettype(false)\n                }}\n                setValue={setCategoryValue}\n                setItems={setCategory}\n                placeholder=\"Category\"\n                containerStyle={{ zIndex: 10 }}\n                style={{ zIndex: 10 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredcategoryvalue(item.Category_ID)\n                }}\n                schema={{\n                  label: 'Category_Name',\n                  value: 'Category_ID'\n                }}\n              />\n            </View>\n            <View style={[styles.dropdown, { paddingLeft: 5 }]}>\n              <DropDownPicker\n                key=\"sub-categoryPicker\"\n                open={opensubCategory}\n                value={subcategoryValue}\n                items={subcategory}\n                setOpen={(value) => {\n                  setOpensubCategory(value)\n                  setOpenCategory(false)\n                  setOpenmanufacturer(false)\n                  setOpenbrand(false)\n                  setOpentangible(false)\n                  setOpenassettype(false)\n                }}\n                setValue={setsubCategoryValue}\n                setItems={setsubCategory}\n                placeholder=\"Sub Category\"\n                containerStyle={{ zIndex: 10 }}\n                style={{ zIndex: 10 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredsubcategoryvalue(item.Subcategory_ID)\n                  console.log(filteredsubcategoryvalue)\n                }}\n                schema={{\n                  label: 'Subcategory_Name',\n                  value: 'Subcategory_ID'\n                }}\n              />\n            </View>\n          </View>\n          <View style={styles.dropdownContainer}>\n            <View style={[styles.dropdown, { paddingRight: 5 }]}>\n              <DropDownPicker\n                key=\"manufacturerPicker\"\n                open={openmanufacturer}\n                value={manufacturerValue}\n                items={manufacturer}\n                setOpen={(value) => {\n                  setOpenmanufacturer(value)\n                  setOpensubCategory(false)\n                  setOpenCategory(false)\n                  setOpenbrand(false)\n                  setOpentangible(false)\n                  setOpenassettype(false)\n                }}\n                setValue={setmanufacturerValue}\n                setItems={setmanufacturer}\n                placeholder=\"Manufacturer\"\n                containerStyle={{ zIndex: 9 }}\n                style={{ zIndex: 9 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredmanufacturervalue(item.Manufacturer_ID)\n                }}\n                schema={{\n                  label: 'Manufacturer_Name',\n                  value: 'Manufacturer_ID'\n                }}\n              />\n            </View>\n            <View style={[styles.dropdown, { paddingLeft: 5 }]}>\n              <DropDownPicker\n                key=\"brandPicker\"\n                open={openbrand}\n                value={brandValue}\n                items={brand}\n                setOpen={(value) => {\n                  setOpenbrand(value)\n                  setOpenmanufacturer(false)\n                  setOpensubCategory(false)\n                  setOpenCategory(false)\n                  setOpentangible(false)\n                  setOpenassettype(false)\n                }}\n                setValue={setbrandValue}\n                setItems={setbrand}\n                placeholder=\"Brand\"\n                containerStyle={{ zIndex: 9 }}\n                style={{ zIndex: 9 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredbrandvalue(item.Brand_ID)\n                }}\n                schema={{\n                  label: 'Brand_Name',\n                  value: 'Brand_ID'\n                }}\n              />\n            </View>\n          </View>\n          <View style={styles.dropdownContainer}>\n            <View style={[styles.dropdown, { paddingRight: 5 }]}>\n              <DropDownPicker\n                key=\"tangiblePicker\"\n                open={opentangible}\n                value={tangibleValue}\n                items={[\n                  { label: 'Tangible', value: 'Tangible' },\n                  { label: 'Intangible', value: 'Intangible' }\n                ]}\n                setOpen={(value) => {\n                  setOpentangible(value)\n                  setOpensubCategory(false)\n                  setOpenCategory(false)\n                  setOpenmanufacturer(false)\n                  setOpenbrand(false)\n                  setOpenassettype(false)\n                }}\n                setValue={settangibleValue}\n                setItems={settangibleValue}\n                placeholder=\"Tangible\"\n                containerStyle={{ zIndex: 8 }}\n                style={{ zIndex: 8 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredtangiblevalue(item.value)\n                }}\n              />\n            </View>\n            <View style={[styles.dropdown, { paddingLeft: 5 }]}>\n              <DropDownPicker\n                key=\"assettypePicker\"\n                open={openassettype}\n                value={assettypeValue}\n                items={[\n                  { label: 'Individual', value: 'Individual' },\n                  { label: 'Bulk', value: 'Bulk' }\n                ]}\n                setOpen={(value) => {\n                  setOpenassettype(value)\n                  setOpentangible(false)\n                  setOpensubCategory(false)\n                  setOpenCategory(false)\n                  setOpenmanufacturer(false)\n                  setOpenbrand(false)\n                }}\n                setValue={setassettypeValue}\n                setItems={setassettypeValue}\n                placeholder=\"Asset Type\"\n                containerStyle={{ zIndex: 8 }}\n                style={{ zIndex: 8 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredassettypevalue(item.value)\n                }}\n              />\n            </View>\n          </View>\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Quantity\"\n              keyboardType=\"numeric\"\n              editable={filteredassettypevalue == 'Individual' ? false : true}\n              value={assetqty ? assetqty.toString() : ''} // Convert to string\n              onChangeText={(text) => {\n                  // Parse input to integer if not empty\n                  const parsedValue = text ? parseInt(text) : null;\n                  // Update assetqty state\n                  setAssetqty(parsedValue);\n                  // Update object's property 'Quantity' as integer\n                  assetForm1.Quantity = parsedValue;\n              }}\n            />\n          </View>\n        </View>\n        <View\n          style={{ display: 'flex', flexDirection: 'row', alignContent: 'end' }}\n        >\n          <Pressable style={styles.buttonPressArea}></Pressable>\n          <Pressable\n            style={styles.buttonPressArea}\n            onPress={async() => {\n              await actions.addAssetForm(assetForm1)\n              console.log(assetForm)\n              navigation.navigate('AddAsset2')\n            }}\n          >\n            <View style={styles.searchContainer}>\n              <Text style={styles.buttonText}>Next</Text>\n            </View>\n          </Pressable>\n        </View>\n      </View>\n    </>\n  )\n}\nconst styles = StyleSheet.create({\n  dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 5,\n    paddingTop: 10\n  },\n  mainContainer: {\n    flex: 1,\n    paddingHorizontal: 10,\n    justifyContent: 'space-between'\n  },\n  disclaimationText: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  disclaimationBox: {\n    display: 'flex',\n    alignItems: 'center',\n    alignContent: 'center',\n    margin: 20\n  },\n  searchContainer: {\n    display: 'flex',\n    padding: 10,\n    alignItems: 'center',\n    backgroundColor: '#009933',\n    borderRadius: 10,\n    elevation: 5,\n    height: 50,\n    justifyContent: 'center'\n  },\n  buttonPressArea: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 5,\n    paddingVertical: 20\n  },\n  buttonText: { color: 'white', fontSize: 17 },\n  input: {\n    height: 40,\n    marginHorizontal: 5,\n    marginTop: 10,\n    borderWidth: 1,\n    padding: 10,\n    flex: 2,\n    borderRadius: 10,\n    fontSize: 17\n  },\n  assetinfocontainer: {\n    paddingBottom: 0,\n    paddingHorizontal: 0\n  },\n  boldText: {\n    fontWeight: 'bold'\n  },\n  stretch: {\n    width: 250,\n    height: 250,\n    resizeMode: 'contain'\n  },\n  imagebox: {\n    alignSelf: 'center'\n  },\n  assetdescbox: {\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  assetdesctext: {\n    fontSize: 17,\n    backgroundColor: '#d0f595',\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 5,\n    elevation: 1\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  dropdown: {\n    flex: 1\n  }\n})\nexport default AddAssetScreen1\n","import 'react-native-gesture-handler'\nimport React, { useEffect, useState } from 'react'\nimport {\n  Text,\n  StyleSheet,\n  View,\n  TextInput,\n  Pressable,\n} from 'react-native'\n\n\nimport { FontAwesome } from '@expo/vector-icons'\nimport { useSelector } from 'react-redux'\nimport DateTimePicker from '@react-native-community/datetimepicker'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../state/index'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { Feather } from '@expo/vector-icons'\n\nconst AddAssetScreen2 = ({ navigation }) => {\n  const dispatch = useDispatch()\n  const actions = bindActionCreators(actionCreators, dispatch)\n  const assetForm = useSelector((state) => state.assetForm)\n  // state variables for location\n  const [currentLocation, setcurrentLocation] = useState(null)\n  // state variables for status/instatus\n  const [openstatus, setOpenstatus] = useState(false)\n  const [statusValue, setstatusValue] = useState(null)\n  const [filteredstatusvalue, setFilteredstatusvalue] = useState(-1)\n  // state variables for condition\n  const [opencondition, setOpencondition] = useState(false)\n  const [conditionValue, setconditionValue] = useState(null)\n  const [filteredconditionvalue, setFilteredconditionvalue] = useState(-1)\n  // state variables for purchaseDate, warrantyDate, expiryDate\n  const [purchaseDate, setPurchaseDate] = useState(null)\n  const [warrantyDate, setWarrantyDate] = useState(null)\n  const [expiryDate, setExpiryDate] = useState(null)\n  const [date, setDate] = useState(new Date())\n  const [showPicker, setShowPicker] = useState(false)\n  const [whichPicker, setWhichPicker] = useState('')\n  // Form details part 2\n  const assetForm2 = {\n    Condition:filteredconditionvalue,\n    PurchaseDate:purchaseDate,\n    WarrantyDate:warrantyDate,\n    ExpiryDate:expiryDate?expiryDate:null,\n    CurrentLocation:currentLocation,\n    Status:filteredstatusvalue,\n  }\n\n  const toggleDatePicker = (pickername) => {\n    setShowPicker(!showPicker)\n    setWhichPicker(pickername)\n  }\n  const onChange = ({ type }, selectedDate) => {\n    if (type == 'set') {\n      const currentDate = selectedDate\n      setDate(currentDate)\n      if (Platform.OS === 'android') {\n        toggleDatePicker()\n        // setShowPicker(true)\n        // yyyy-mm-dd\n        if (whichPicker == 'purchaseDate') {\n          setPurchaseDate(currentDate.toISOString().split('T')[0])\n        } else if (whichPicker == 'warrantyDate') {\n          setWarrantyDate(currentDate.toISOString().split('T')[0])\n        } else {\n          setExpiryDate(currentDate.toISOString().split('T')[0])\n        }\n      }\n    } else {\n      toggleDatePicker('')\n      // setShowPicker(false)\n    }\n  }\n  return (\n    <>\n      <View style={styles.mainContainer}>\n        <View>\n          <View style={styles.disclaimationBox}>\n            <Text style={styles.disclaimationText}>Part 2 : General</Text>\n          </View>          \n          <View style={styles.dropdownContainer}>\n            <View style={[styles.dropdown, { paddingRight: 5 }]}>\n              <DropDownPicker\n                key=\"statusPicker\"\n                open={openstatus}\n                value={statusValue}\n                items={[\n                  { label: 'In use', value: 'In use' },\n                  { label: 'In storage', value: 'In storage' },\n                  { label: 'Loaned out', value: 'Loaned out' },\n                  { label: 'Out for repair', value: 'Out for repair' }\n                ]}\n                setOpen={(value) => {\n                  setOpenstatus(value)\n                  setOpencondition(false)\n                }}\n                setValue={setstatusValue}\n                setItems={setstatusValue}\n                placeholder=\"Status\"\n                containerStyle={{ zIndex: 8 }}\n                style={{ zIndex: 8 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredstatusvalue(item.value)\n                }}\n              />\n            </View>\n            <View style={[styles.dropdown, { paddingLeft: 5 }]}>\n              <DropDownPicker\n                key=\"conditionPicker\"\n                open={opencondition}\n                value={conditionValue}\n                items={[\n                  { label: 'New', value: 'New' },\n                  { label: 'Good', value: 'Good' },\n                  { label: 'Fair', value: 'Fair' },\n                  { label: 'Poor', value: 'Poor' }\n                ]}\n                setOpen={(value) => {\n                  setOpencondition(value)\n                  setOpenstatus(false)\n                }}\n                setValue={setconditionValue}\n                setItems={setconditionValue}\n                placeholder=\"Condition\"\n                containerStyle={{ zIndex: 8 }}\n                style={{ zIndex: 8 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredconditionvalue(item.value)\n                }}\n              />\n            </View>\n          </View>\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <Pressable\n              style={{ height: 50, flex: 1 }}\n              onPress={() => {\n                toggleDatePicker('purchaseDate')\n              }}\n            >\n              <TextInput\n                style={styles.input}\n                placeholder=\"Purchase Date\"\n                keyboardType=\"default\"\n                value={purchaseDate}\n                onChangeText={setPurchaseDate}\n                editable={false}\n              />\n            </Pressable>\n\n            <Pressable\n              style={{ height: 50, flex: 1 }}\n              onPress={() => {\n                toggleDatePicker('warrantyDate')\n              }}\n            >\n              <TextInput\n                style={styles.input}\n                placeholder=\"Warranty Date\"\n                keyboardType=\"default\"\n                value={warrantyDate}\n                onChangeText={setWarrantyDate}\n                editable={false}\n              />\n            </Pressable>\n            {showPicker && (\n              <DateTimePicker\n                mode=\"date\"\n                display=\"spinner\"\n                value={date}\n                onChange={onChange}\n                // onChange={(event, selectedDate) => onChange(event, selectedDate, 'parameter')}\n              />\n            )}\n          </View>\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <Pressable\n              style={{ height: 50, flex: 1 }}\n              onPress={() => {\n                toggleDatePicker('expiryDate')\n              }}\n            >\n              <TextInput\n                style={styles.input}\n                placeholder=\"Expiry Date\"\n                keyboardType=\"default\"\n                value={expiryDate}\n                onChangeText={setExpiryDate}\n                editable={false}\n              />\n            </Pressable>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Current Location\"\n              keyboardType=\"default\"\n              onChangeText={(text) => setcurrentLocation(text)}\n              value={currentLocation}\n            />\n          </View>\n        </View>\n        <View\n          style={{ display: 'flex', flexDirection: 'row', alignContent: 'end' }}\n        >\n          <Pressable\n            style={styles.buttonPressArea}\n            onPress={() => navigation.navigate('AddAsset1')}\n          >\n            <View style={styles.searchContainer}>\n              <Text style={styles.buttonText}>Back</Text>\n            </View>\n          </Pressable>\n          <Pressable\n            style={styles.buttonPressArea}\n            onPress={async () => {\n              await actions.addAssetForm(assetForm2)\n              // console.log(assetForm)\n              navigation.navigate('AddAsset3')\n            }}\n          >\n            <View style={styles.searchContainer}>\n              <Text style={styles.buttonText}>Next</Text>\n            </View>\n          </Pressable>\n        </View>\n      </View>\n    </>\n  )\n}\nconst styles = StyleSheet.create({\n  dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 5,\n    paddingTop: 10\n  },\n  dropdown: {\n    flex: 1\n  },\n  mainContainer: {\n    flex: 1,\n    paddingHorizontal: 10,\n    justifyContent: 'space-between'\n  },\n  disclaimationText: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  disclaimationBox: {\n    display: 'flex',\n    alignItems: 'center',\n    alignContent: 'center',\n    margin: 20\n  },\n  searchContainer: {\n    display: 'flex',\n    padding: 10,\n    alignItems: 'center',\n    backgroundColor: '#009933',\n    borderRadius: 10,\n    elevation: 5,\n    height: 50,\n    justifyContent: 'center'\n  },\n  buttonPressArea: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 5,\n    paddingVertical: 20\n  },\n  buttonText: { color: 'white', fontSize: 17 },\n  input: {\n    height: 40,\n    marginHorizontal: 5,\n    marginTop: 10,\n    borderWidth: 1,\n    padding: 10,\n    flex: 1,\n    borderRadius: 10,\n    fontSize: 17\n  },\n  assetinfocontainer: {\n    paddingBottom: 0,\n    paddingHorizontal: 0\n  },\n  boldText: {\n    fontWeight: 'bold'\n  },\n  stretch: {\n    width: 250,\n    height: 250,\n    resizeMode: 'contain'\n  },\n  imagebox: {\n    alignSelf: 'center'\n  },\n  assetdescbox: {\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  assetdesctext: {\n    fontSize: 17,\n    backgroundColor: '#d0f595',\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 5,\n    elevation: 1\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n})\nexport default AddAssetScreen2\n","import 'react-native-gesture-handler'\nimport React, { useEffect, useState } from 'react'\nimport {\n  Text,\n  StyleSheet,\n  View,\n  TextInput,\n  Pressable,\n} from 'react-native'\nimport { FontAwesome } from '@expo/vector-icons'\nimport { useSelector } from 'react-redux'\nimport DateTimePicker from '@react-native-community/datetimepicker'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../state/index'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { Feather } from '@expo/vector-icons'\n\nconst AddAssetScreen3 = ({ navigation }) => {\n  const dispatch = useDispatch()\n  const actions = bindActionCreators(actionCreators, dispatch)\n  const assetForm = useSelector((state) => state.assetForm)\n  // state variables for vendors\n  const [openvendor, setOpenvendor] = useState(false)\n  const [vendorValue, setvendorValue] = useState(null)\n  const [vendor, setvendor] = useState([{ Vendor_Name: 'All', Vendor_ID: -1 }])\n  const [filteredvendorvalue, setFilteredvendorvalue] = useState(-1)\n  // state variables for TaxPercentage/inTaxPercentage\n  const [openTaxPercentage, setOpenTaxPercentage] = useState(false)\n  const [TaxPercentageValue, setTaxPercentageValue] = useState(null)\n  const [filteredTaxPercentagevalue, setFilteredTaxPercentagevalue] = useState(-1)\n  // state variables for DepreciationMethod\n  const [openDepreciationMethod, setOpenDepreciationMethod] = useState(false)\n  const [DepreciationMethodValue, setDepreciationMethodValue] = useState(null)\n  const [filteredDepreciationMethodvalue, setFilteredDepreciationMethodvalue] = useState(-1)\n  // state variables for ReceivedDate, InServiceDate\n  const [ReceivedDateDate, setReceivedDateDate] = useState(null)\n  const [InServiceDateDate, setInServiceDateDate] = useState(null)\n  const [date, setDate] = useState(new Date())\n  const [showPicker, setShowPicker] = useState(false)\n  const [whichPicker, setWhichPicker] = useState('')\n  \n  const [assetAccountCode, setAssetAccountCode] = useState(null)\n  const [assetPONumber, setAssetPONumber] = useState(null)\n  const [assetRecoveryPeriod, setAssetRecoveryPeriod] = useState(null)\n  const [assetPurchasePrice, setAssetPurchasePrice] = useState(null)\n  const [assetMarketValue, setAssetMarketValue] = useState(null)\n  const [assetScrapValue, setAssetScrapValue] = useState(null)\n  const [assetNetValue, setAssetNetValue] = useState(null)\n  // Form details part 3\n  const assetForm3 = {\n    assetFinance: {\n      VendorID: filteredvendorvalue,\n      ReceivedDate: ReceivedDateDate,\n      InServiceDate: InServiceDateDate,\n      AccountCode: assetAccountCode,\n      PONumber: assetPONumber,\n      RecoveryPeriod:assetRecoveryPeriod,\n      PurchasePrice:assetPurchasePrice,\n      MarketValue:assetMarketValue,\n      ScrapValue:assetScrapValue,\n      NetValue:assetNetValue,\n      TaxPercentage:filteredTaxPercentagevalue,\n      DepreciationMethod:filteredDepreciationMethodvalue\n    }\n  }\n  // method to fetch vendors\n  const fetchVendors = async () => {\n    try {\n      const res = await fetch(\n        `http://192.168.1.7:1443/api/AssetVendor/GetAllVendors`\n      )\n      if (!res.ok) {\n        setvendor({ Vendor_Name: 'Oops! Empty', Vendor_ID: -1 })\n        throw new Error('Could not fetch Categories')\n      }\n      const data = await res.json()\n      setvendor(data)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  const toggleDatePicker = (pickername) => {\n    setShowPicker(!showPicker)\n    setWhichPicker(pickername)\n  }\n  const onChange = ({ type }, selectedDate) => {\n    if (type == 'set') {\n      const currentDate = selectedDate\n      setDate(currentDate)\n      if (Platform.OS === 'android') {\n        toggleDatePicker()\n        // setShowPicker(true)\n        // yyyy-mm-dd\n        if (whichPicker == 'ReceivedDateDate') {\n          setReceivedDateDate(currentDate.toISOString().split('T')[0])\n        } else if (whichPicker == 'InServiceDateDate') {\n          setInServiceDateDate(currentDate.toISOString().split('T')[0])\n        } else {\n          setExpiryDate(currentDate.toISOString().split('T')[0])\n        }\n      }\n    } else {\n      toggleDatePicker('')\n      // setShowPicker(false)\n    }\n  }\n  useEffect(() => {\n    fetchVendors();  \n  }, [])\n  \n  return (\n    <>\n      <View style={styles.mainContainer}>\n        <View>\n          <View style={styles.disclaimationBox}>\n            <Text style={styles.disclaimationText}>Part 3 : Finance</Text>\n          </View>\n          <View style={styles.dropdownContainer}>\n            <View style={[styles.dropdown]}>\n              <DropDownPicker\n                key=\"vendor Picker\"\n                open={openvendor}\n                value={vendorValue}\n                items={vendor}\n                setOpen={(value) => {\n                  setOpenvendor(value)\n                }}\n                setValue={setvendorValue}\n                setItems={setvendor}\n                placeholder=\"Vendor\"\n                containerStyle={{ zIndex: 10 }}\n                style={{ zIndex: 10 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredvendorvalue(item.Vendor_ID)\n                }}\n                schema={{\n                  label: 'Vendor_Name',\n                  value: 'Vendor_ID'\n                }}\n              />\n            </View>\n          </View>          \n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <Pressable\n              style={{ height: 50, flex: 1 }}\n              onPress={() => {\n                toggleDatePicker('ReceivedDateDate')\n              }}\n            >\n              <TextInput\n                style={styles.input}\n                placeholder=\"Received Date\"\n                keyboardType=\"default\"\n                value={ReceivedDateDate}\n                onChangeText={setReceivedDateDate}\n                editable={false}\n              />\n            </Pressable>\n\n            <Pressable\n              style={{ height: 50, flex: 1 }}\n              onPress={() => {\n                toggleDatePicker('InServiceDateDate')\n              }}\n            >\n              <TextInput\n                style={styles.input}\n                placeholder=\"InService Date\"\n                keyboardType=\"default\"\n                value={InServiceDateDate}\n                onChangeText={setInServiceDateDate}\n                editable={false}\n              />\n            </Pressable>\n            {showPicker && (\n              <DateTimePicker\n                mode=\"date\"\n                display=\"spinner\"\n                value={date}\n                onChange={onChange}\n                // onChange={(event, selectedDate) => onChange(event, selectedDate, 'parameter')}\n              />\n            )}\n          </View>\n          {/* Account Code and PO Number */}\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Account Code\"\n              keyboardType=\"numeric\"\n              value={assetAccountCode ? assetAccountCode.toString() : ''} // Convert to string\n              onChangeText={(text) => {\n                  // Parse input to integer if not empty\n                  const parsedValue = text ? parseInt(text) : null;\n                  setAssetAccountCode(parsedValue);\n                  // Update object's property 'Quantity' as integer\n                  assetForm3.assetFinance.AccountCode = parsedValue;\n              }}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"PO Number\"\n              keyboardType=\"numeric\"\n              // onChangeText={(text) => setAssetPONumber(text)}\n              // value={assetPONumber}\n              value={assetPONumber ? assetPONumber.toString() : ''} // Convert to string\n              onChangeText={(text) => {\n                  // Parse input to integer if not empty\n                  const parsedValue = text ? parseInt(text) : null;\n                  setAssetPONumber(parsedValue);\n                  // Update object's property 'Quantity' as integer\n                  assetForm3.assetFinance.PONumber = parsedValue;\n              }}\n            />\n          </View>\n          {/* Recovery period and Purchase Price */}\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Recovery Period\"\n              keyboardType=\"numeric\"\n              // onChangeText={(text) => setAssetRecoveryPeriod(text)}\n              // value={assetRecoveryPeriod}\n              value={assetRecoveryPeriod ? assetRecoveryPeriod.toString() : ''} // Convert to string\n              onChangeText={(text) => {\n                  // Parse input to integer if not empty\n                  const parsedValue = text ? parseInt(text) : null;\n                  setAssetRecoveryPeriod(parsedValue);\n                  // Update object's property 'Quantity' as integer\n                  assetForm3.assetFinance.RecoveryPeriod = parsedValue;\n              }}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Purchase Price\"\n              keyboardType=\"numeric\"\n              // onChangeText={(text) => setAssetPurchasePrice(text)}\n              // value={assetPurchasePrice}\n              value={assetPurchasePrice ? assetPurchasePrice.toString() : ''} // Convert to string\n              onChangeText={(text) => {\n                  // Parse input to integer if not empty\n                  const parsedValue = text ? parseInt(text) : null;\n                  setAssetPurchasePrice(parsedValue);\n                  // Update object's property 'Quantity' as integer\n                  assetForm3.assetFinance.PurchasePrice = parsedValue;\n              }}\n            />\n          </View>\n          {/* Market value and Scrap Value */}\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Market Value\"\n              keyboardType=\"numeric\"\n              // onChangeText={(text) => setAssetMarketValue(text)}\n              // value={assetMarketValue}\n              value={assetMarketValue ? assetMarketValue.toString() : ''} // Convert to string\n              onChangeText={(text) => {\n                  // Parse input to integer if not empty\n                  const parsedValue = text ? parseInt(text) : null;\n                  setAssetMarketValue(parsedValue);\n                  // Update object's property 'Quantity' as integer\n                  assetForm3.assetFinance.MarketValue = parsedValue;\n              }}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Scrap Value\"\n              keyboardType=\"numeric\"\n              // onChangeText={(text) => setAssetScrapValue(text)}\n              // value={assetScrapValue}\n              value={assetScrapValue ? assetScrapValue.toString() : ''} // Convert to string\n              onChangeText={(text) => {\n                  // Parse input to integer if not empty\n                  const parsedValue = text ? parseInt(text) : null;\n                  setAssetScrapValue(parsedValue);\n                  // Update object's property 'Quantity' as integer\n                  assetForm3.assetFinance.ScrapValue = parsedValue;\n              }}\n            />\n          </View>\n          {/* NetValue */}\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Net Value\"\n              keyboardType=\"numeric\"\n              // onChangeText={(text) => setAssetNetValue(text)}\n              // value={assetNetValue}\n              value={assetNetValue ? assetNetValue.toString() : ''} // Convert to string\n              onChangeText={(text) => {\n                  // Parse input to integer if not empty\n                  const parsedValue = text ? parseInt(text) : null;\n                  setAssetNetValue(parsedValue);\n                  // Update object's property 'Quantity' as integer\n                  assetForm3.assetFinance.ScrapValue = parsedValue;\n              }}\n            />           \n          </View>\n          {/* Depreciation and tax */}\n          <View style={styles.dropdownContainer}>\n            <View style={[styles.dropdown, { paddingRight: 5 }]}>\n              <DropDownPicker\n                key=\"TaxPercentage Picker\"\n                open={openTaxPercentage}\n                value={TaxPercentageValue}\n                items={[\n                  { label: '0', value: 0 },\n                  { label: '5', value: 5 },\n                  { label: '12', value: 12 },\n                  { label: '18', value: 18 },\n                  { label: '28', value: 28 }\n                ]}\n                setOpen={(value) => {\n                  setOpenTaxPercentage(value)\n                  setOpenDepreciationMethod(false)\n                }}\n                setValue={setTaxPercentageValue}\n                setItems={setTaxPercentageValue}\n                placeholder=\"Tax Percentage\"\n                containerStyle={{ zIndex: 8 }}\n                style={{ zIndex: 8 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredTaxPercentagevalue(item.value)\n                }}\n              />\n            </View>\n            <View style={[styles.dropdown, { paddingLeft: 5 }]}>\n              <DropDownPicker\n                key=\"DepreciationMethod Picker\"\n                open={openDepreciationMethod}\n                value={DepreciationMethodValue}\n                items={[\n                  { label: 'StraightLine', value: 'StraightLine' },\n                  { label: '150% Declining Balance', value: '150% Declining Balance' },\n                  { label: '200% Declining Balance', value: '200% Declining Balance' },\n                  { label: '20% Reducing Balance', value: '20% Reducing Balance' },\n                  { label: '30% Reducing Balance', value: '30% Reducing Balance' },\n                  { label: '40% Reducing Balance', value: '40% Reducing Balance' },\n                  { label: 'sum of years', value: 'sum of years' },\n                ]}\n                setOpen={(value) => {\n                  setOpenDepreciationMethod(value)\n                  setOpenTaxPercentage(false)\n                }}\n                setValue={setDepreciationMethodValue}\n                setItems={setDepreciationMethodValue}\n                placeholder=\"Depreciation Method\"\n                containerStyle={{ zIndex: 8 }}\n                style={{ zIndex: 8 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredDepreciationMethodvalue(item.value)\n                }}\n              />\n            </View>\n          </View>    \n        </View>\n       \n        <View\n          style={{ display: 'flex', flexDirection: 'row', alignContent: 'end' }}\n        >\n          <Pressable\n            style={styles.buttonPressArea}\n            onPress={() => navigation.navigate('AddAsset2')}\n          >\n            <View style={styles.searchContainer}>\n              <Text style={styles.buttonText}>Back</Text>\n            </View>\n          </Pressable>\n          <Pressable\n            style={styles.buttonPressArea}\n            onPress={async () => {\n              await actions.addAssetForm(assetForm3)\n              console.log(assetForm)\n              navigation.navigate('AddAsset4')\n            }}\n          >\n            <View style={styles.searchContainer}>\n              <Text style={styles.buttonText}>Next</Text>\n            </View>\n          </Pressable>\n        </View>\n      </View>\n    </>\n  )\n}\nconst styles = StyleSheet.create({\n  dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 5,\n    paddingTop: 10\n  },\n  dropdown: {\n    flex: 1\n  },\n  mainContainer: {\n    flex: 1,\n    paddingHorizontal: 10,\n    justifyContent: 'space-between'\n  },\n  disclaimationText: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  disclaimationBox: {\n    display: 'flex',\n    alignItems: 'center',\n    alignContent: 'center',\n    margin: 20\n  },\n  searchContainer: {\n    display: 'flex',\n    padding: 10,\n    alignItems: 'center',\n    backgroundColor: '#009933',\n    borderRadius: 10,\n    elevation: 5,\n    height: 50,\n    justifyContent: 'center'\n  },\n  buttonPressArea: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 5,\n    paddingVertical: 20\n  },\n  buttonText: { color: 'white', fontSize: 17 },\n  input: {\n    height: 40,\n    marginHorizontal: 5,\n    marginTop: 10,\n    borderWidth: 1,\n    padding: 10,\n    flex: 1,\n    borderRadius: 10,\n    fontSize: 17\n  },\n  assetinfocontainer: {\n    paddingBottom: 0,\n    paddingHorizontal: 0\n  },\n  boldText: {\n    fontWeight: 'bold'\n  },\n  stretch: {\n    width: 250,\n    height: 250,\n    resizeMode: 'contain'\n  },\n  imagebox: {\n    alignSelf: 'center'\n  },\n  assetdescbox: {\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  assetdesctext: {\n    fontSize: 17,\n    backgroundColor: '#d0f595',\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 5,\n    elevation: 1\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n})\nexport default AddAssetScreen3\n","import React, { useRef } from 'react'\nimport {\n  Text,\n  Modal,\n  StyleSheet,\n  Pressable,\n  View,\n  Image,\n  TouchableOpacity\n} from 'react-native'\nimport { Entypo } from '@expo/vector-icons'\nimport { Camera, CameraType } from 'expo-camera'\n\nconst CameraModal = ({ modalVisible, setModalVisible, setImageUri }) => {\n  const cameraRef = useRef(null)\n  const takePicture = async () => {\n    console.log('clicked')\n    if (cameraRef.current) {\n      try {\n        const { uri } = await cameraRef.current.takePictureAsync()\n        setImageUri(uri)\n        setModalVisible(!modalVisible)\n      } catch (error) {\n        console.error('Failed to take picture:', error)\n      }\n    }\n  }\n  return (\n    <View style={styles.centeredView}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert('Modal has been closed.')\n          setModalVisible(!modalVisible)\n        }}\n      >\n        <View\n          style={styles.centeredView}\n          onPress={() => setModalVisible(!modalVisible)}\n        >\n          <View style={styles.modalView}>\n            <Pressable onPress={() => setModalVisible(!modalVisible)}>\n              <View style={{ position: 'absolute', top: -20, right: -20 }}>\n                <Entypo name=\"circle-with-cross\" size={30} color=\"black\" />\n              </View>\n            </Pressable>\n\n            <Camera\n              style={{ width: 300, height: 400 }}\n              ref={cameraRef}\n              type={Camera.Constants.Type.back}\n              autoFocus={true} // Disable autofocus\n            />\n            <View\n              style={{\n                width: 300,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                textAlign: 'center'\n              }}\n            >\n              <TouchableOpacity\n                onPress={takePicture}\n                style={{\n                  margin: 10,\n                  width: 50,\n                  height: 50,\n                  borderRadius: 50,\n                  backgroundColor: 'green',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                }}\n              >\n                <Text style={{ fontSize: 15, color: 'black' }}>\n                  <Entypo name=\"camera\" size={24} color=\"white\" />\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  stretch: {\n    width: 150,\n    height: 150,\n    resizeMode: 'contain'\n  },\n  centeredView: {\n    backgroundColor: 'rgba(0, 0, 0, 0.13)',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 55\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    position: 'relative'\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: '#F194FF'\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n})\nexport default CameraModal\n","import 'react-native-gesture-handler'\nimport React, { useEffect, useState, useRef } from 'react'\nimport {\n  Text,\n  StyleSheet,\n  View,\n  Image,\n  TextInput,\n  Pressable,\n  TouchableOpacity\n} from 'react-native'\nimport { FontAwesome } from '@expo/vector-icons'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators } from '../state/index'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport { Feather } from '@expo/vector-icons'\nimport { Camera, CameraType } from 'expo-camera'\nimport * as ImagePicker from 'expo-image-picker'\nimport { Entypo } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport CameraModal from '../components/CameraModal'\nconst AddAssetScreen4 = ({ navigation }) => {\n  const dispatch = useDispatch()\n  const actions = bindActionCreators(actionCreators, dispatch)\n  const assetForm = useSelector((state) => state.assetForm)\n  // state variables for outlets\n  const [openoutlet, setOpenoutlet] = useState(false)\n  const [outletValue, setoutletValue] = useState(null)\n  const [outlet, setoutlet] = useState([{ outlet_Name: 'All', outlet_ID: -1 }])\n  const [filteredoutletvalue, setFilteredoutletvalue] = useState(-1)\n  // state variables for others\n  const [assetPersonInCharge, setAssetPersonInCharge] = useState(null)\n  const [assetAdditionalCharges, setAssetAdditionalCharges] = useState(null)\n  const [assetAdditionalChargesRemarks, setAssetAdditionalChargesRemarks] =\n    useState(null)\n  const [assetAmcCharges, setAssetAmcCharges] = useState(null)\n  const [assetInstallationCharges, setAssetInstallationCharges] = useState(null)\n  // Form details part 4\n  const assetForm4 = {\n    assetallocation: {\n      Outlet_ID: filteredoutletvalue,\n      Person_In_Charge: assetPersonInCharge\n    },\n    expense: {\n      AdditionalCharges: assetAdditionalCharges,\n      AdditionalChargesRemarks: assetAdditionalChargesRemarks,\n      AmcCharges: assetAmcCharges,\n      InstallationCharges: assetInstallationCharges\n    }\n  }\n  // for camera\n  const [imageUri, setImageUri] = useState(null)\n  // for camera modal\n  const [modalVisible, setModalVisible] = useState(false)\n\n  const handleClick = () => {\n    setModalVisible(true)\n  }\n  const pickImageFromGallery = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1\n    })\n\n    if (!result.canceled) {\n      const selectedImage = result.assets[0] // Accessing the first selected asset\n      setImageUri(selectedImage.uri)\n    }\n  }\n\n  const sendToAPI = () => {\n    // Implement sending imageUri to API\n    console.log('Image URI:', imageUri)\n    // Clear the imageUri after sending\n    setImageUri(null)\n  }\n\n  useEffect(() => {\n    const requestCameraPermission = async () => {\n      try {\n        const { status } = await Camera.requestCameraPermissionsAsync()\n        if (status !== 'granted') {\n          console.log('Camera permission denied')\n          // Handle permission denied case\n        }\n      } catch (error) {\n        console.error('Error requesting camera permission:', error)\n      }\n    }\n\n    requestCameraPermission()\n  }, [])\n\n  // method to fetch outlets\n  const fetchoutlets = async () => {\n    try {\n      const res = await fetch(\n        `http://192.168.1.7:1443/api/Outlets/GetAllOutlets`\n      )\n      if (!res.ok) {\n        setoutlet({ Outlet_Name: 'Oops! Empty', Outlet_ID: -1 })\n        throw new Error('Could not fetch Categories')\n      }\n      const data = await res.json()\n      setoutlet(data)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    fetchoutlets()\n  }, [])\n\n  return (\n    <>\n      <View style={styles.mainContainer}>\n        <View>\n          <View style={styles.disclaimationBox}>\n            <Text style={styles.disclaimationText}>\n              Part 4 : Asset Allocation and Expenses\n            </Text>\n          </View>\n          <View style={styles.dropdownContainer}>\n            <View style={[styles.dropdown]}>\n              <DropDownPicker\n                key=\"outletPicker\"\n                open={openoutlet}\n                value={outletValue}\n                items={outlet}\n                setOpen={(value) => {\n                  setOpenoutlet(value)\n                }}\n                setValue={setoutletValue}\n                setItems={setoutlet}\n                placeholder=\"Outlet\"\n                containerStyle={{ zIndex: 10 }}\n                style={{ zIndex: 10 }}\n                TickIconComponent={() => (\n                  <FontAwesome\n                    name=\"circle\"\n                    style={{ marginRight: 5 }}\n                    color=\"#009933\"\n                  />\n                )}\n                ArrowDownIconComponent={() => (\n                  <Feather name=\"chevron-down\" size={22} color=\"black\" />\n                )}\n                tickIconStyle={{\n                  width: 15,\n                  height: 15\n                }}\n                onSelectItem={async (item) => {\n                  setFilteredoutletvalue(item.Outlet_ID)\n                }}\n                schema={{\n                  label: 'Outlet_Name',\n                  value: 'Outlet_ID'\n                }}\n              />\n            </View>\n          </View>\n          {/* Recovery period and Purchase Price */}\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Person In Charge\"\n              keyboardType=\"default\"\n              onChangeText={(text) => setAssetPersonInCharge(text)}\n              value={assetPersonInCharge}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Additional Charges\"\n              keyboardType=\"numeric\"\n              value={\n                assetAdditionalCharges ? assetAdditionalCharges.toString() : ''\n              } // Convert to string\n              onChangeText={(text) => {\n                const parsedValue = text ? parseInt(text) : null\n                setAssetAdditionalCharges(parsedValue)\n                assetForm4.expense.AdditionalCharges = parsedValue\n              }}\n            />\n          </View>\n          {/* Market value and Scrap Value */}\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Installation Charges\"\n              keyboardType=\"numeric\"\n              value={\n                assetInstallationCharges\n                  ? assetInstallationCharges.toString()\n                  : ''\n              } // Convert to string\n              onChangeText={(text) => {\n                const parsedValue = text ? parseInt(text) : null\n                setAssetInstallationCharges(parsedValue)\n                assetForm4.expense.InstallationCharges = parsedValue\n              }}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Amc Charges\"\n              keyboardType=\"numeric\"\n              value={assetAmcCharges ? assetAmcCharges.toString() : ''} // Convert to string\n              onChangeText={(text) => {\n                const parsedValue = text ? parseInt(text) : null\n                setAssetAmcCharges(parsedValue)\n                assetForm4.expense.AmcCharges = parsedValue\n              }}\n            />\n          </View>\n          {/* InstallationCharges */}\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Additional Charges Remarks\"\n              keyboardType=\"default\"\n              onChangeText={(text) => setAssetAdditionalChargesRemarks(text)}\n              value={assetAdditionalChargesRemarks}\n            />\n          </View>\n          {/* camera */}\n          <View\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              fontSize: 17,\n              paddingHorizontal: 5,\n              paddingVertical: 10,\n              alignItems:'center'\n            }}\n          >\n            <Text style={{ fontSize: 17 }}>Asset Image</Text>\n            <View  style={{width:'100%'}}>\n              {imageUri ? (\n                <View >\n                  <Text>Captured Image:</Text>\n                  <Image\n                    source={{ uri: imageUri }}\n                    style={{ width: 120, height: 120 }}\n                  />\n                  <TouchableOpacity onPress={sendToAPI}>\n                    <Text>Send to API</Text>\n                  </TouchableOpacity>\n                </View>\n              ) : (\n                <View style={{display:'flex',flexDirection:'row',justifyContent:'center',width:'100%'}}>\n                  {/* <Camera\n                    style={{ width:100,height:100 }}\n                    ref={cameraRef}\n                    type={Camera.Constants.Type.back}\n                    autoFocus={false} // Disable autofocus\n                  />                   */}\n                  <TouchableOpacity onPress={handleClick} style={{margin:20,width:50,height:50,borderRadius:50,backgroundColor:'green',justifyContent:'center',alignItems:'center'}}>\n                    <Text\n                      style={{ fontSize: 15, color: 'black' }}\n                    >\n                     <Entypo name=\"camera\" size={24} color=\"white\" />\n                    </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity onPress={pickImageFromGallery} style={{margin:20,width:50,height:50,borderRadius:50,backgroundColor:'green',justifyContent:'center',alignItems:'center'}}>\n                    <Text\n                      style={{ fontSize: 15, color: 'black' }}\n                    >\n                     <MaterialCommunityIcons name=\"camera-burst\" size={24} color=\"white\" />\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n              )}\n            </View>\n          </View>\n        </View>\n\n        <View\n          style={{ display: 'flex', flexDirection: 'row', alignContent: 'end' }}\n        >\n          <Pressable\n            style={styles.buttonPressArea}\n            onPress={() => navigation.navigate('AddAsset3')}\n          >\n            <View style={styles.searchContainer}>\n              <Text style={styles.buttonText}>Back</Text>\n            </View>\n          </Pressable>\n          <Pressable\n            style={styles.buttonPressArea}\n            onPress={async () => {\n              await actions.addAssetForm(assetForm4)\n              console.log(assetForm)\n              // navigation.navigate('Notifications')\n            }}\n          >\n            <View style={styles.searchContainer}>\n              <Text style={styles.buttonText}>Submit</Text>\n            </View>\n          </Pressable>\n        </View>\n      </View>\n      {modalVisible && (\n        <CameraModal\n          modalVisible={modalVisible}\n          setModalVisible={setModalVisible}\n          setImageUri={setImageUri}\n        />\n      )}\n    </>\n  )\n}\nconst styles = StyleSheet.create({\n  dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 5,\n    paddingTop: 10\n  },\n  dropdown: {\n    flex: 1\n  },\n  mainContainer: {\n    flex: 1,\n    paddingHorizontal: 10,\n    justifyContent: 'space-between'\n  },\n  disclaimationText: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  disclaimationBox: {\n    display: 'flex',\n    alignItems: 'center',\n    alignContent: 'center',\n    margin: 20\n  },\n  searchContainer: {\n    display: 'flex',\n    padding: 10,\n    alignItems: 'center',\n    backgroundColor: '#009933',\n    borderRadius: 10,\n    elevation: 5,\n    height: 50,\n    justifyContent: 'center'\n  },\n  buttonPressArea: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 5,\n    paddingVertical: 20\n  },\n  buttonText: { color: 'white', fontSize: 17 },\n  input: {\n    height: 40,\n    marginHorizontal: 5,\n    marginTop: 10,\n    borderWidth: 1,\n    padding: 10,\n    flex: 1,\n    borderRadius: 10,\n    fontSize: 17\n  },\n  assetinfocontainer: {\n    paddingBottom: 0,\n    paddingHorizontal: 0\n  },\n  boldText: {\n    fontWeight: 'bold'\n  },\n  stretch: {\n    width: 250,\n    height: 250,\n    resizeMode: 'contain'\n  },\n  imagebox: {\n    alignSelf: 'center'\n  },\n  assetdescbox: {\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  assetdesctext: {\n    fontSize: 17,\n    backgroundColor: '#d0f595',\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 5,\n    elevation: 1\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n})\nexport default AddAssetScreen4\n","import 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react'\nimport { NavigationContainer } from '@react-navigation/native';\nimport {\n  Text,\n  StyleSheet,\n  View,\n} from 'react-native'\nimport { createStackNavigator } from '@react-navigation/stack';\nconst Stack = createStackNavigator();\nimport AddAssetScreen1 from './AddAssetScreen1'\nimport AddAssetScreen2 from './AddAssetScreen2'\nimport AddAssetScreen3 from './AddAssetScreen3'\nimport AddAssetScreen4 from './AddAssetScreen4'\n\n\nconst AddAsset = () => { \n  \n  return (\n    <>\n    <View style={styles.disclaimationBox}>\n        <Text style={styles.disclaimationText}>\n          Hey! You can ADD your Asset here\n        </Text>\n    </View>\n    <Stack.Navigator screenOptions={{\n        gestureEnabled: true,\n        gestureDirection: 'horizontal',\n        gestureResponseDistance:100\n      }}>\n      <Stack.Screen name=\"AddAsset1\" component={AddAssetScreen1}  options={{ headerShown: false }}/>\n      <Stack.Screen name=\"AddAsset2\" component={AddAssetScreen2}  options={{ headerShown: false }}/>\n      <Stack.Screen name=\"AddAsset3\" component={AddAssetScreen3}  options={{ headerShown: false }}/>\n      <Stack.Screen name=\"AddAsset4\" component={AddAssetScreen4}  options={{ headerShown: false }}/>\n    </Stack.Navigator>\n    </>\n  )\n}\nconst styles = StyleSheet.create({\n  disclaimationText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  disclaimationBox: {\n    display: 'flex',\n    alignItems: 'center',\n    alignContent: 'center',\n    margin: 20\n  }\n})\nexport default AddAsset\n","import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n  Animated,\r\n  Easing,\r\n  Keyboard,\r\n  Modal\r\n} from 'react-native';\r\nimport assetData from '../assets/data/assetList_cleaned.json';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst AssetHistory = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [fadeAnim] = useState(new Animated.Value(0));\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleSearch = (text) => {\r\n    setQuery(text);\r\n    const matched = assetData.find(\r\n      (item) =>\r\n        item[\"Employee Code\"]?.toString().toLowerCase() === text.toLowerCase() ||\r\n        item[\"Name\"]?.toString().toLowerCase() === text.toLowerCase() ||\r\n        item[\"Asset ID\"]?.toString().toLowerCase() === text.toLowerCase()\r\n    );\r\n\r\n    if (matched) {\r\n      setResult(matched);\r\n      setModalVisible(true);\r\n      fadeAnim.setValue(0);\r\n      Animated.timing(fadeAnim, {\r\n        toValue: 1,\r\n        duration: 400,\r\n        easing: Easing.out(Easing.ease),\r\n        useNativeDriver: true\r\n      }).start();\r\n    } else {\r\n      setResult(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"🔍 Search by Asset ID, Employee Code or Name\"\r\n        value={query}\r\n        onChangeText={handleSearch}\r\n        placeholderTextColor=\"#999\"\r\n      />\r\n\r\n      {!result && query !== '' && (\r\n        <Text style={styles.noResult}>No matching asset found.</Text>\r\n      )}\r\n\r\n      <Modal visible={modalVisible} transparent animationType=\"slide\">\r\n        <View style={styles.modalBackground}>\r\n          <Animated.View style={[styles.card, { opacity: fadeAnim }]}>\r\n            <Ionicons name=\"laptop-outline\" size={50} color=\"#009933\" style={{ alignSelf: 'center' }} />\r\n            <Text style={styles.label}>Employee Code: <Text style={styles.value}>{result?.[\"Employee Code\"]}</Text></Text>\r\n            <Text style={styles.label}>Name: <Text style={styles.value}>{result?.[\"Name\"]}</Text></Text>\r\n            <Text style={styles.label}>Asset ID: <Text style={styles.value}>{result?.[\"Asset ID\"]}</Text></Text>\r\n            <Text style={styles.label}>Vendor: <Text style={styles.value}>{result?.[\"Vendor\"]}</Text></Text>\r\n            <Text style={styles.label}>Asset Type: <Text style={styles.value}>\r\n              {result?.[\"Asset ID\"]?.toLowerCase().includes('rental') ? 'Rental' : 'Fixed'}\r\n            </Text></Text>\r\n            <Text style={styles.closeBtn} onPress={() => setModalVisible(false)}>Close</Text>\r\n          </Animated.View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#eef5f2',\r\n    padding: 20\r\n  },\r\n  input: {\r\n    height: 50,\r\n    borderColor: '#009933',\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    backgroundColor: 'white',\r\n    paddingHorizontal: 15,\r\n    fontSize: 16,\r\n    color: '#000'\r\n  },\r\n  noResult: {\r\n    color: 'red',\r\n    fontStyle: 'italic',\r\n    marginTop: 10\r\n  },\r\n  modalBackground: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  card: {\r\n    backgroundColor: '#fff',\r\n    padding: 25,\r\n    borderRadius: 15,\r\n    width: '85%',\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    elevation: 10\r\n  },\r\n  label: {\r\n    fontWeight: 'bold',\r\n    marginTop: 10\r\n  },\r\n  value: {\r\n    fontWeight: 'normal',\r\n    color: '#444'\r\n  },\r\n  closeBtn: {\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n    color: '#009933',\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nexport default AssetHistory;\r\n","import React from 'react'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { Ionicons, Entypo, FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons'\n\n// 👇 update paths to match where your screens actually live\nimport Home from './Home'\nimport AssetSearch from './AssetSearch'\nimport AddAsset from './AddAsset'\nimport AssetHistory from './Assethistory'\n\nconst Tab = createBottomTabNavigator()\n\nconst ContentTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: '#d0f595',\n        tabBarInactiveTintColor: 'white',\n        tabBarStyle: {\n          backgroundColor: '#009933',\n          height: 60,\n          paddingBottom: 5\n        },\n        headerStyle: {\n          backgroundColor: '#009933'\n        },\n        headerTitleStyle: {\n          fontWeight: 'bold',\n          fontSize: 20,\n          color: 'white'\n        },\n        headerTitleAlign: 'center'\n      }}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          tabBarIcon: ({ focused }) => (\n            <Ionicons name=\"home\" size={22} color={focused ? '#d0f595' : 'white'} />\n          )\n        }}\n      />\n      <Tab.Screen\n        name=\"Search\"\n        component={AssetSearch}\n        options={{\n          tabBarIcon: ({ focused }) => (\n            <Ionicons name=\"search\" size={22} color={focused ? '#d0f595' : 'white'} />\n          )\n        }}\n      />\n      <Tab.Screen\n        name=\"Add New\"\n        component={AddAsset}\n        options={{\n          tabBarIcon: ({ focused }) => (\n            <MaterialCommunityIcons name=\"plus-box\" size={24} color={focused ? '#d0f595' : 'white'} />\n          )\n        }}\n      />\n      <Tab.Screen\n        name=\"Asset History\"\n        component={AssetHistory}\n        options={{\n          tabBarIcon: ({ focused }) => (\n            <FontAwesome5 name=\"history\" size={20} color={focused ? '#d0f595' : 'white'} />\n          )\n        }}\n      />\n    </Tab.Navigator>\n  )\n}\n\nexport default ContentTabs\n","import React from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport ContentTabs from '../screens/ContentTabs'\n\nconst ContentLanding = () => {\n  return (\n    <NavigationContainer>\n      <ContentTabs />\n    </NavigationContainer>\n  )\n}\n\nexport default ContentLanding\n","import React from 'react'\nimport ContentLanding from './ContentLanding'\n\nconst Landing = () => {\n  return <ContentLanding />\n}\n\nexport default Landing\n","import 'react-native-reanimated';\n\nimport { StyleSheet } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { Provider } from 'react-redux'\nimport { store } from './src/state/store'\nimport Landing from './src/components/Landing'\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Landing/>\n    </Provider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  boldText: {\n    fontWeight: 'bold'\n  }\n})\n\nconsole.log(\"Home screen loaded\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"%3Cyour-username%3E.github.io/%3Crepo-name%3E/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [583], () => (__webpack_require__(2394)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["reducer","state","action","type","payload","initialState","assetFormReducer","Object","assign","combineReducers","qrcode","qrcodeReducer","loginState","loginStateReducer","userName","userNameReducer","assetForm","store","legacy_createStore","reducers","applyMiddleware","thunk","departments","styles","StyleSheet","create","container","flex","backgroundColor","content","padding","title","fontSize","fontWeight","marginBottom","input","borderWidth","borderColor","borderRadius","dropdownContainer","submitBtn","alignItems","marginTop","submitText","color","confirmation","revokeLink","alignSelf","revokeText","closeBtn","closeText","AllocationModal","visible","onClose","onOpenRevoke","onAllocated","form","setForm","useState","name","onboardingDate","selectedEmpCode","setSelectedEmpCode","selectedDepartment","setSelectedDepartment","uniqueId","setUniqueId","assetType","setAssetType","confirmationAnim","Animated","Value","confirmationText","setConfirmationText","empCodes","setEmpCodes","useEffect","codes","Set","assetList","map","item","filter","Boolean","match","find","today","Date","formatted","getDate","toString","padStart","getMonth","getFullYear","_jsx","Modal","animationType","children","KeyboardAvoidingView","behavior","undefined","style","_jsxs","ScrollView","contentContainerStyle","Text","TextInput","placeholder","value","onChangeText","text","View","Picker","selectedValue","onValueChange","Item","label","dept","i","code","editable","TouchableOpacity","onPress","async","Alert","alert","empCode","department","setValue","timing","toValue","duration","useNativeDriver","start","error","opacity","handleRevokeRedirect","setTimeout","Dimensions","get","height","heading","searchBtn","searchText","card","elevation","inStockBtn","inStockText","noResult","textAlign","successMessage","RevokeAssetScreen","setEmpCode","matchedAssets","setMatchedAssets","setSuccessMessage","handleSearch","results","assetData","toLowerCase","Ionicons","size","onSubmitEditing","length","FlatList","data","keyExtractor","renderItem","assetId","newMatched","toLocaleDateString","handleInStock","closeButton","header","tabRow","flexDirection","justifyContent","tab","paddingVertical","paddingHorizontal","activeTab","searchInput","assetCard","assetText","noData","sectionHeader","InStockScreen","allocatedData","setTab","searchQuery","setSearchQuery","animatedValue","inStockAssets","some","alloc","exportAssetsByTypeToExcel","cleaned","fixedAssets","rentalAssets","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","charAt","toUpperCase","slice","excelData","bookType","uri","FileSystem","cacheDirectory","writeAsStringAsync","encoding","Base64","Sharing","shareAsync","message","dataToRender","vendorData","v","includes","getGroupedAssets","filtered","fixed","sort","a","b","localeCompare","rental","fixedCount","rentalCount","placeholderTextColor","transform","scale","BarChart","labels","datasets","colors","width","fromZero","showValuesOnTopOfBars","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","barPercentage","propsForBackgroundLines","stroke","propsForLabels","verticalLabelRotation","onDataPointClick","index","vendor","isFixed","isRental","_Fragment","ListEmptyComponent","screenWidth","marginVertical","iconContainer","totalCount","marginLeft","chartStyle","button","buttonText","modalContainer","paddingTop","modalHeading","floatingButton","position","zIndex","Home","modalVisible","setModalVisible","viewType","setViewType","allocationVisible","setAllocationVisible","revokeVisible","setRevokeVisible","inStockVisible","setInStockVisible","setAllocatedData","totalLaptops","showAssets","PieChart","population","legendFontColor","legendFontSize","accessor","paddingLeft","absolute","bottom","right","Name","Warranty","newAsset","prev","searchBar","shadowColor","shadowOpacity","shadowOffset","shadowRadius","empty","AssetSearch","search","setSearch","filteredData","Asset_ID","Emp_Code","Vendor_Name","qrcodeFetch","assetqrcode","dispatch","qrcodeClear","loggedin","loggedout","userNameAssign","nameofuser","userNameRemoval","addAssetForm","assetformobject","resetAssetForm","mainContainer","disclaimationText","disclaimationBox","display","alignContent","margin","searchContainer","buttonPressArea","marginHorizontal","assetinfocontainer","paddingBottom","boldText","stretch","resizeMode","imagebox","assetdescbox","assetdesctext","textStyle","modalText","dropdown","AddAssetScreen1","navigation","useDispatch","actions","bindActionCreators","actionCreators","useSelector","assetname","setAssetname","assetdesc","setAssetdesc","assetmodelno","setAssetmodelno","assetserial","setAssetserial","assetqty","setAssetqty","openCategory","setOpenCategory","categoryValue","setCategoryValue","category","setCategory","Category_Name","Category_ID","filteredcategoryvalue","setFilteredcategoryvalue","opensubCategory","setOpensubCategory","subcategoryValue","setsubCategoryValue","subcategory","setsubCategory","Subcategory_Name","Subcategory_ID","filteredsubcategoryvalue","setFilteredsubcategoryvalue","openmanufacturer","setOpenmanufacturer","manufacturerValue","setmanufacturerValue","manufacturer","setmanufacturer","Manufacturer_Name","Manufacturer_ID","filteredmanufacturervalue","setFilteredmanufacturervalue","openbrand","setOpenbrand","brandValue","setbrandValue","brand","setbrand","Brand_Name","Brand_ID","filteredbrandvalue","setFilteredbrandvalue","opentangible","setOpentangible","tangibleValue","settangibleValue","filteredtangiblevalue","setFilteredtangiblevalue","openassettype","setOpenassettype","assettypeValue","setassettypeValue","filteredassettypevalue","setFilteredassettypevalue","assetForm1","res","fetch","ok","Error","json","e","fetchCategories","fetchSubCategories","fetchmanufacturers","fetchbrands","keyboardType","paddingRight","DropDownPicker","open","items","setOpen","setItems","containerStyle","TickIconComponent","FontAwesome","marginRight","ArrowDownIconComponent","Feather","tickIconStyle","onSelectItem","schema","console","log","parsedValue","parseInt","Quantity","Pressable","navigate","AddAssetScreen2","currentLocation","setcurrentLocation","openstatus","setOpenstatus","statusValue","setstatusValue","filteredstatusvalue","setFilteredstatusvalue","opencondition","setOpencondition","conditionValue","setconditionValue","filteredconditionvalue","setFilteredconditionvalue","purchaseDate","setPurchaseDate","warrantyDate","setWarrantyDate","expiryDate","setExpiryDate","date","setDate","showPicker","setShowPicker","whichPicker","setWhichPicker","assetForm2","Condition","PurchaseDate","WarrantyDate","ExpiryDate","CurrentLocation","Status","toggleDatePicker","pickername","DateTimePicker","mode","onChange","selectedDate","AddAssetScreen3","openvendor","setOpenvendor","vendorValue","setvendorValue","setvendor","Vendor_ID","filteredvendorvalue","setFilteredvendorvalue","openTaxPercentage","setOpenTaxPercentage","TaxPercentageValue","setTaxPercentageValue","filteredTaxPercentagevalue","setFilteredTaxPercentagevalue","openDepreciationMethod","setOpenDepreciationMethod","DepreciationMethodValue","setDepreciationMethodValue","filteredDepreciationMethodvalue","setFilteredDepreciationMethodvalue","ReceivedDateDate","setReceivedDateDate","InServiceDateDate","setInServiceDateDate","assetAccountCode","setAssetAccountCode","assetPONumber","setAssetPONumber","assetRecoveryPeriod","setAssetRecoveryPeriod","assetPurchasePrice","setAssetPurchasePrice","assetMarketValue","setAssetMarketValue","assetScrapValue","setAssetScrapValue","assetNetValue","setAssetNetValue","assetForm3","assetFinance","VendorID","ReceivedDate","InServiceDate","AccountCode","PONumber","RecoveryPeriod","PurchasePrice","MarketValue","ScrapValue","NetValue","TaxPercentage","DepreciationMethod","fetchVendors","centeredView","modalView","buttonOpen","buttonClose","CameraModal","setImageUri","cameraRef","useRef","transparent","onRequestClose","top","Entypo","Camera","ref","Constants","Type","back","autoFocus","current","takePictureAsync","AddAssetScreen4","openoutlet","setOpenoutlet","outletValue","setoutletValue","outlet","setoutlet","outlet_Name","outlet_ID","filteredoutletvalue","setFilteredoutletvalue","assetPersonInCharge","setAssetPersonInCharge","assetAdditionalCharges","setAssetAdditionalCharges","assetAdditionalChargesRemarks","setAssetAdditionalChargesRemarks","assetAmcCharges","setAssetAmcCharges","assetInstallationCharges","setAssetInstallationCharges","assetForm4","assetallocation","Outlet_ID","Person_In_Charge","expense","AdditionalCharges","AdditionalChargesRemarks","AmcCharges","InstallationCharges","imageUri","status","requestCameraPermissionsAsync","requestCameraPermission","Outlet_Name","fetchoutlets","Image","source","sendToAPI","handleClick","result","ImagePicker","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","canceled","selectedImage","assets","MaterialCommunityIcons","Stack","createStackNavigator","AddAsset","Navigator","screenOptions","gestureEnabled","gestureDirection","gestureResponseDistance","Screen","component","options","headerShown","fontStyle","modalBackground","AssetHistory","query","setQuery","setResult","fadeAnim","matched","easing","Easing","out","ease","Tab","createBottomTabNavigator","ContentTabs","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","headerStyle","headerTitleStyle","headerTitleAlign","tabBarIcon","focused","FontAwesome5","ContentLanding","NavigationContainer","Landing","App","Provider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}